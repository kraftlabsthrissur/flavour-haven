//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TradeSuiteApp.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SalesReturnGSTDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SalesReturnGSTDataSet : global::System.Data.DataSet {
        
        private SpRptSalesReturnGSTReportDataTable tableSpRptSalesReturnGSTReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SalesReturnGSTDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SalesReturnGSTDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SpRptSalesReturnGSTReport"] != null)) {
                    base.Tables.Add(new SpRptSalesReturnGSTReportDataTable(ds.Tables["SpRptSalesReturnGSTReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpRptSalesReturnGSTReportDataTable SpRptSalesReturnGSTReport {
            get {
                return this.tableSpRptSalesReturnGSTReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SalesReturnGSTDataSet cln = ((SalesReturnGSTDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SpRptSalesReturnGSTReport"] != null)) {
                    base.Tables.Add(new SpRptSalesReturnGSTReportDataTable(ds.Tables["SpRptSalesReturnGSTReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSpRptSalesReturnGSTReport = ((SpRptSalesReturnGSTReportDataTable)(base.Tables["SpRptSalesReturnGSTReport"]));
            if ((initTable == true)) {
                if ((this.tableSpRptSalesReturnGSTReport != null)) {
                    this.tableSpRptSalesReturnGSTReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SalesReturnGSTDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SalesReturnGSTDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSpRptSalesReturnGSTReport = new SpRptSalesReturnGSTReportDataTable();
            base.Tables.Add(this.tableSpRptSalesReturnGSTReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSpRptSalesReturnGSTReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SalesReturnGSTDataSet ds = new SalesReturnGSTDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SpRptSalesReturnGSTReportRowChangeEventHandler(object sender, SpRptSalesReturnGSTReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpRptSalesReturnGSTReportDataTable : global::System.Data.TypedTableBase<SpRptSalesReturnGSTReportRow> {
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnPremises;
            
            private global::System.Data.DataColumn columnCustomerTaxCategory;
            
            private global::System.Data.DataColumn columnCustomerCategory;
            
            private global::System.Data.DataColumn columnCustomerAccountsCategory;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnGSTNo;
            
            private global::System.Data.DataColumn columnCustomerState;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemCategory;
            
            private global::System.Data.DataColumn columnSalesCategory;
            
            private global::System.Data.DataColumn columnGSTRate;
            
            private global::System.Data.DataColumn columnHSNCode;
            
            private global::System.Data.DataColumn columnTransactionType;
            
            private global::System.Data.DataColumn columnTransactionNo;
            
            private global::System.Data.DataColumn columnTransactionDate;
            
            private global::System.Data.DataColumn columnAgainstInvoiceNo;
            
            private global::System.Data.DataColumn columnAgainstInvoiceDate;
            
            private global::System.Data.DataColumn columnReturnQty;
            
            private global::System.Data.DataColumn columnQtyInKgs;
            
            private global::System.Data.DataColumn columnGrossAmount;
            
            private global::System.Data.DataColumn columnTradeDiscount;
            
            private global::System.Data.DataColumn columnOfferDiscount;
            
            private global::System.Data.DataColumn columnTurnoverDiscount;
            
            private global::System.Data.DataColumn columnTaxableValue;
            
            private global::System.Data.DataColumn columnSGSTAmt;
            
            private global::System.Data.DataColumn columnCGSTAmt;
            
            private global::System.Data.DataColumn columnIGSTAmt;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnCashDiscount;
            
            private global::System.Data.DataColumn columnRoundOff;
            
            private global::System.Data.DataColumn columnTotalGST;
            
            private global::System.Data.DataColumn columnReturnInvoiceAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportDataTable() {
                this.TableName = "SpRptSalesReturnGSTReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpRptSalesReturnGSTReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SpRptSalesReturnGSTReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PremisesColumn {
                get {
                    return this.columnPremises;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerTaxCategoryColumn {
                get {
                    return this.columnCustomerTaxCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCategoryColumn {
                get {
                    return this.columnCustomerCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerAccountsCategoryColumn {
                get {
                    return this.columnCustomerAccountsCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GSTNoColumn {
                get {
                    return this.columnGSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerStateColumn {
                get {
                    return this.columnCustomerState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemCategoryColumn {
                get {
                    return this.columnItemCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesCategoryColumn {
                get {
                    return this.columnSalesCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GSTRateColumn {
                get {
                    return this.columnGSTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HSNCodeColumn {
                get {
                    return this.columnHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionTypeColumn {
                get {
                    return this.columnTransactionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionNoColumn {
                get {
                    return this.columnTransactionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionDateColumn {
                get {
                    return this.columnTransactionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgainstInvoiceNoColumn {
                get {
                    return this.columnAgainstInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgainstInvoiceDateColumn {
                get {
                    return this.columnAgainstInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnQtyColumn {
                get {
                    return this.columnReturnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyInKgsColumn {
                get {
                    return this.columnQtyInKgs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossAmountColumn {
                get {
                    return this.columnGrossAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeDiscountColumn {
                get {
                    return this.columnTradeDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferDiscountColumn {
                get {
                    return this.columnOfferDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TurnoverDiscountColumn {
                get {
                    return this.columnTurnoverDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxableValueColumn {
                get {
                    return this.columnTaxableValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SGSTAmtColumn {
                get {
                    return this.columnSGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CGSTAmtColumn {
                get {
                    return this.columnCGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IGSTAmtColumn {
                get {
                    return this.columnIGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashDiscountColumn {
                get {
                    return this.columnCashDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RoundOffColumn {
                get {
                    return this.columnRoundOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalGSTColumn {
                get {
                    return this.columnTotalGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnInvoiceAmountColumn {
                get {
                    return this.columnReturnInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportRow this[int index] {
                get {
                    return ((SpRptSalesReturnGSTReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpRptSalesReturnGSTReportRowChangeEventHandler SpRptSalesReturnGSTReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpRptSalesReturnGSTReportRowChangeEventHandler SpRptSalesReturnGSTReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpRptSalesReturnGSTReportRowChangeEventHandler SpRptSalesReturnGSTReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpRptSalesReturnGSTReportRowChangeEventHandler SpRptSalesReturnGSTReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSpRptSalesReturnGSTReportRow(SpRptSalesReturnGSTReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportRow AddSpRptSalesReturnGSTReportRow(
                        string Location, 
                        string Premises, 
                        string CustomerTaxCategory, 
                        string CustomerCategory, 
                        string CustomerAccountsCategory, 
                        string CustomerName, 
                        string GSTNo, 
                        string CustomerState, 
                        string ItemName, 
                        string ItemCategory, 
                        string SalesCategory, 
                        decimal GSTRate, 
                        string HSNCode, 
                        string TransactionType, 
                        string TransactionNo, 
                        System.DateTime TransactionDate, 
                        string AgainstInvoiceNo, 
                        System.DateTime AgainstInvoiceDate, 
                        decimal ReturnQty, 
                        decimal QtyInKgs, 
                        decimal GrossAmount, 
                        decimal TradeDiscount, 
                        decimal OfferDiscount, 
                        decimal TurnoverDiscount, 
                        decimal TaxableValue, 
                        decimal SGSTAmt, 
                        decimal CGSTAmt, 
                        decimal IGSTAmt, 
                        decimal CessAmount, 
                        decimal CashDiscount, 
                        decimal RoundOff, 
                        decimal TotalGST, 
                        decimal ReturnInvoiceAmount) {
                SpRptSalesReturnGSTReportRow rowSpRptSalesReturnGSTReportRow = ((SpRptSalesReturnGSTReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Location,
                        Premises,
                        CustomerTaxCategory,
                        CustomerCategory,
                        CustomerAccountsCategory,
                        CustomerName,
                        GSTNo,
                        CustomerState,
                        ItemName,
                        ItemCategory,
                        SalesCategory,
                        GSTRate,
                        HSNCode,
                        TransactionType,
                        TransactionNo,
                        TransactionDate,
                        AgainstInvoiceNo,
                        AgainstInvoiceDate,
                        ReturnQty,
                        QtyInKgs,
                        GrossAmount,
                        TradeDiscount,
                        OfferDiscount,
                        TurnoverDiscount,
                        TaxableValue,
                        SGSTAmt,
                        CGSTAmt,
                        IGSTAmt,
                        CessAmount,
                        CashDiscount,
                        RoundOff,
                        TotalGST,
                        ReturnInvoiceAmount};
                rowSpRptSalesReturnGSTReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpRptSalesReturnGSTReportRow);
                return rowSpRptSalesReturnGSTReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SpRptSalesReturnGSTReportDataTable cln = ((SpRptSalesReturnGSTReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpRptSalesReturnGSTReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLocation = base.Columns["Location"];
                this.columnPremises = base.Columns["Premises"];
                this.columnCustomerTaxCategory = base.Columns["CustomerTaxCategory"];
                this.columnCustomerCategory = base.Columns["CustomerCategory"];
                this.columnCustomerAccountsCategory = base.Columns["CustomerAccountsCategory"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnGSTNo = base.Columns["GSTNo"];
                this.columnCustomerState = base.Columns["CustomerState"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemCategory = base.Columns["ItemCategory"];
                this.columnSalesCategory = base.Columns["SalesCategory"];
                this.columnGSTRate = base.Columns["GSTRate"];
                this.columnHSNCode = base.Columns["HSNCode"];
                this.columnTransactionType = base.Columns["TransactionType"];
                this.columnTransactionNo = base.Columns["TransactionNo"];
                this.columnTransactionDate = base.Columns["TransactionDate"];
                this.columnAgainstInvoiceNo = base.Columns["AgainstInvoiceNo"];
                this.columnAgainstInvoiceDate = base.Columns["AgainstInvoiceDate"];
                this.columnReturnQty = base.Columns["ReturnQty"];
                this.columnQtyInKgs = base.Columns["QtyInKgs"];
                this.columnGrossAmount = base.Columns["GrossAmount"];
                this.columnTradeDiscount = base.Columns["TradeDiscount"];
                this.columnOfferDiscount = base.Columns["OfferDiscount"];
                this.columnTurnoverDiscount = base.Columns["TurnoverDiscount"];
                this.columnTaxableValue = base.Columns["TaxableValue"];
                this.columnSGSTAmt = base.Columns["SGSTAmt"];
                this.columnCGSTAmt = base.Columns["CGSTAmt"];
                this.columnIGSTAmt = base.Columns["IGSTAmt"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnCashDiscount = base.Columns["CashDiscount"];
                this.columnRoundOff = base.Columns["RoundOff"];
                this.columnTotalGST = base.Columns["TotalGST"];
                this.columnReturnInvoiceAmount = base.Columns["ReturnInvoiceAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnPremises = new global::System.Data.DataColumn("Premises", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPremises);
                this.columnCustomerTaxCategory = new global::System.Data.DataColumn("CustomerTaxCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerTaxCategory);
                this.columnCustomerCategory = new global::System.Data.DataColumn("CustomerCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCategory);
                this.columnCustomerAccountsCategory = new global::System.Data.DataColumn("CustomerAccountsCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAccountsCategory);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnGSTNo = new global::System.Data.DataColumn("GSTNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTNo);
                this.columnCustomerState = new global::System.Data.DataColumn("CustomerState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerState);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemCategory = new global::System.Data.DataColumn("ItemCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCategory);
                this.columnSalesCategory = new global::System.Data.DataColumn("SalesCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCategory);
                this.columnGSTRate = new global::System.Data.DataColumn("GSTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTRate);
                this.columnHSNCode = new global::System.Data.DataColumn("HSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSNCode);
                this.columnTransactionType = new global::System.Data.DataColumn("TransactionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionType);
                this.columnTransactionNo = new global::System.Data.DataColumn("TransactionNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionNo);
                this.columnTransactionDate = new global::System.Data.DataColumn("TransactionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDate);
                this.columnAgainstInvoiceNo = new global::System.Data.DataColumn("AgainstInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgainstInvoiceNo);
                this.columnAgainstInvoiceDate = new global::System.Data.DataColumn("AgainstInvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgainstInvoiceDate);
                this.columnReturnQty = new global::System.Data.DataColumn("ReturnQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnQty);
                this.columnQtyInKgs = new global::System.Data.DataColumn("QtyInKgs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyInKgs);
                this.columnGrossAmount = new global::System.Data.DataColumn("GrossAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossAmount);
                this.columnTradeDiscount = new global::System.Data.DataColumn("TradeDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeDiscount);
                this.columnOfferDiscount = new global::System.Data.DataColumn("OfferDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferDiscount);
                this.columnTurnoverDiscount = new global::System.Data.DataColumn("TurnoverDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTurnoverDiscount);
                this.columnTaxableValue = new global::System.Data.DataColumn("TaxableValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableValue);
                this.columnSGSTAmt = new global::System.Data.DataColumn("SGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGSTAmt);
                this.columnCGSTAmt = new global::System.Data.DataColumn("CGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGSTAmt);
                this.columnIGSTAmt = new global::System.Data.DataColumn("IGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGSTAmt);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnCashDiscount = new global::System.Data.DataColumn("CashDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashDiscount);
                this.columnRoundOff = new global::System.Data.DataColumn("RoundOff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundOff);
                this.columnTotalGST = new global::System.Data.DataColumn("TotalGST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGST);
                this.columnReturnInvoiceAmount = new global::System.Data.DataColumn("ReturnInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnInvoiceAmount);
                this.columnLocation.MaxLength = 50;
                this.columnPremises.MaxLength = 100;
                this.columnCustomerTaxCategory.MaxLength = 100;
                this.columnCustomerCategory.MaxLength = 50;
                this.columnCustomerAccountsCategory.MaxLength = 50;
                this.columnCustomerName.MaxLength = 200;
                this.columnGSTNo.MaxLength = 200;
                this.columnCustomerState.MaxLength = 50;
                this.columnItemName.AllowDBNull = false;
                this.columnItemName.MaxLength = 100;
                this.columnItemCategory.AllowDBNull = false;
                this.columnItemCategory.MaxLength = 50;
                this.columnSalesCategory.ReadOnly = true;
                this.columnSalesCategory.MaxLength = 50;
                this.columnGSTRate.ReadOnly = true;
                this.columnHSNCode.MaxLength = 16;
                this.columnTransactionType.ReadOnly = true;
                this.columnTransactionType.MaxLength = 1;
                this.columnTransactionNo.MaxLength = 20;
                this.columnAgainstInvoiceNo.MaxLength = 20;
                this.columnQtyInKgs.ReadOnly = true;
                this.columnOfferDiscount.ReadOnly = true;
                this.columnTotalGST.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportRow NewSpRptSalesReturnGSTReportRow() {
                return ((SpRptSalesReturnGSTReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpRptSalesReturnGSTReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SpRptSalesReturnGSTReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpRptSalesReturnGSTReportRowChanged != null)) {
                    this.SpRptSalesReturnGSTReportRowChanged(this, new SpRptSalesReturnGSTReportRowChangeEvent(((SpRptSalesReturnGSTReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpRptSalesReturnGSTReportRowChanging != null)) {
                    this.SpRptSalesReturnGSTReportRowChanging(this, new SpRptSalesReturnGSTReportRowChangeEvent(((SpRptSalesReturnGSTReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpRptSalesReturnGSTReportRowDeleted != null)) {
                    this.SpRptSalesReturnGSTReportRowDeleted(this, new SpRptSalesReturnGSTReportRowChangeEvent(((SpRptSalesReturnGSTReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpRptSalesReturnGSTReportRowDeleting != null)) {
                    this.SpRptSalesReturnGSTReportRowDeleting(this, new SpRptSalesReturnGSTReportRowChangeEvent(((SpRptSalesReturnGSTReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSpRptSalesReturnGSTReportRow(SpRptSalesReturnGSTReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalesReturnGSTDataSet ds = new SalesReturnGSTDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpRptSalesReturnGSTReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpRptSalesReturnGSTReportRow : global::System.Data.DataRow {
            
            private SpRptSalesReturnGSTReportDataTable tableSpRptSalesReturnGSTReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpRptSalesReturnGSTReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpRptSalesReturnGSTReport = ((SpRptSalesReturnGSTReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Premises {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.PremisesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Premises\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.PremisesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerTaxCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.CustomerTaxCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerTaxCategory\' in table \'SpRptSalesReturnGSTReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CustomerTaxCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.CustomerCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCategory\' in table \'SpRptSalesReturnGSTReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CustomerCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerAccountsCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.CustomerAccountsCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAccountsCategory\' in table \'SpRptSalesReturnGSTRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CustomerAccountsCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'SpRptSalesReturnGSTReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GSTNo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.GSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTNo\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.GSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerState {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.CustomerStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerState\' in table \'SpRptSalesReturnGSTReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CustomerStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemName {
                get {
                    return ((string)(this[this.tableSpRptSalesReturnGSTReport.ItemNameColumn]));
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemCategory {
                get {
                    return ((string)(this[this.tableSpRptSalesReturnGSTReport.ItemCategoryColumn]));
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.ItemCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalesCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.SalesCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCategory\' in table \'SpRptSalesReturnGSTReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.SalesCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GSTRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.GSTRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTRate\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.GSTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HSNCode {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.HSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSNCode\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.HSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransactionType {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.TransactionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionType\' in table \'SpRptSalesReturnGSTReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TransactionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransactionNo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.TransactionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionNo\' in table \'SpRptSalesReturnGSTReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TransactionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpRptSalesReturnGSTReport.TransactionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDate\' in table \'SpRptSalesReturnGSTReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TransactionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgainstInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgainstInvoiceNo\' in table \'SpRptSalesReturnGSTReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AgainstInvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgainstInvoiceDate\' in table \'SpRptSalesReturnGSTReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReturnQty {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.ReturnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnQty\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.ReturnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QtyInKgs {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.QtyInKgsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyInKgs\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.QtyInKgsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.GrossAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossAmount\' in table \'SpRptSalesReturnGSTReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.GrossAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TradeDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.TradeDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeDiscount\' in table \'SpRptSalesReturnGSTReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TradeDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.OfferDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferDiscount\' in table \'SpRptSalesReturnGSTReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.OfferDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TurnoverDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.TurnoverDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TurnoverDiscount\' in table \'SpRptSalesReturnGSTReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TurnoverDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TaxableValue {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.TaxableValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableValue\' in table \'SpRptSalesReturnGSTReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TaxableValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.SGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGSTAmt\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.SGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.CGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGSTAmt\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.IGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGSTAmt\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.IGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'SpRptSalesReturnGSTReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CashDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.CashDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashDiscount\' in table \'SpRptSalesReturnGSTReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.CashDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RoundOff {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.RoundOffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoundOff\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.RoundOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalGST {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.TotalGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalGST\' in table \'SpRptSalesReturnGSTReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.TotalGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReturnInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesReturnGSTReport.ReturnInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnInvoiceAmount\' in table \'SpRptSalesReturnGSTReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesReturnGSTReport.ReturnInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationNull() {
                this[this.tableSpRptSalesReturnGSTReport.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPremisesNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.PremisesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPremisesNull() {
                this[this.tableSpRptSalesReturnGSTReport.PremisesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerTaxCategoryNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CustomerTaxCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerTaxCategoryNull() {
                this[this.tableSpRptSalesReturnGSTReport.CustomerTaxCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerCategoryNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CustomerCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerCategoryNull() {
                this[this.tableSpRptSalesReturnGSTReport.CustomerCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerAccountsCategoryNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CustomerAccountsCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerAccountsCategoryNull() {
                this[this.tableSpRptSalesReturnGSTReport.CustomerAccountsCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tableSpRptSalesReturnGSTReport.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGSTNoNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.GSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGSTNoNull() {
                this[this.tableSpRptSalesReturnGSTReport.GSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerStateNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CustomerStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerStateNull() {
                this[this.tableSpRptSalesReturnGSTReport.CustomerStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesCategoryNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.SalesCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesCategoryNull() {
                this[this.tableSpRptSalesReturnGSTReport.SalesCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGSTRateNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.GSTRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGSTRateNull() {
                this[this.tableSpRptSalesReturnGSTReport.GSTRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHSNCodeNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.HSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHSNCodeNull() {
                this[this.tableSpRptSalesReturnGSTReport.HSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionTypeNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TransactionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionTypeNull() {
                this[this.tableSpRptSalesReturnGSTReport.TransactionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionNoNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TransactionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionNoNull() {
                this[this.tableSpRptSalesReturnGSTReport.TransactionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionDateNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TransactionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionDateNull() {
                this[this.tableSpRptSalesReturnGSTReport.TransactionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgainstInvoiceNoNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.AgainstInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgainstInvoiceNoNull() {
                this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgainstInvoiceDateNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.AgainstInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgainstInvoiceDateNull() {
                this[this.tableSpRptSalesReturnGSTReport.AgainstInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnQtyNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.ReturnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnQtyNull() {
                this[this.tableSpRptSalesReturnGSTReport.ReturnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQtyInKgsNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.QtyInKgsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQtyInKgsNull() {
                this[this.tableSpRptSalesReturnGSTReport.QtyInKgsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossAmountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.GrossAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossAmountNull() {
                this[this.tableSpRptSalesReturnGSTReport.GrossAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeDiscountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TradeDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeDiscountNull() {
                this[this.tableSpRptSalesReturnGSTReport.TradeDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferDiscountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.OfferDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferDiscountNull() {
                this[this.tableSpRptSalesReturnGSTReport.OfferDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTurnoverDiscountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TurnoverDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTurnoverDiscountNull() {
                this[this.tableSpRptSalesReturnGSTReport.TurnoverDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxableValueNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TaxableValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxableValueNull() {
                this[this.tableSpRptSalesReturnGSTReport.TaxableValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.SGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSGSTAmtNull() {
                this[this.tableSpRptSalesReturnGSTReport.SGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCGSTAmtNull() {
                this[this.tableSpRptSalesReturnGSTReport.CGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.IGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIGSTAmtNull() {
                this[this.tableSpRptSalesReturnGSTReport.IGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCessAmountNull() {
                this[this.tableSpRptSalesReturnGSTReport.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashDiscountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.CashDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashDiscountNull() {
                this[this.tableSpRptSalesReturnGSTReport.CashDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRoundOffNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.RoundOffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRoundOffNull() {
                this[this.tableSpRptSalesReturnGSTReport.RoundOffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalGSTNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.TotalGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalGSTNull() {
                this[this.tableSpRptSalesReturnGSTReport.TotalGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnInvoiceAmountNull() {
                return this.IsNull(this.tableSpRptSalesReturnGSTReport.ReturnInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnInvoiceAmountNull() {
                this[this.tableSpRptSalesReturnGSTReport.ReturnInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SpRptSalesReturnGSTReportRowChangeEvent : global::System.EventArgs {
            
            private SpRptSalesReturnGSTReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportRowChangeEvent(SpRptSalesReturnGSTReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpRptSalesReturnGSTReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TradeSuiteApp.Web.SalesReturnGSTDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SpRptSalesReturnGSTReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SpRptSalesReturnGSTReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SpRptSalesReturnGSTReport";
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("Premises", "Premises");
            tableMapping.ColumnMappings.Add("CustomerTaxCategory", "CustomerTaxCategory");
            tableMapping.ColumnMappings.Add("CustomerCategory", "CustomerCategory");
            tableMapping.ColumnMappings.Add("CustomerAccountsCategory", "CustomerAccountsCategory");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("GSTNo", "GSTNo");
            tableMapping.ColumnMappings.Add("CustomerState", "CustomerState");
            tableMapping.ColumnMappings.Add("ItemName", "ItemName");
            tableMapping.ColumnMappings.Add("ItemCategory", "ItemCategory");
            tableMapping.ColumnMappings.Add("SalesCategory", "SalesCategory");
            tableMapping.ColumnMappings.Add("GSTRate", "GSTRate");
            tableMapping.ColumnMappings.Add("HSNCode", "HSNCode");
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType");
            tableMapping.ColumnMappings.Add("TransactionNo", "TransactionNo");
            tableMapping.ColumnMappings.Add("TransactionDate", "TransactionDate");
            tableMapping.ColumnMappings.Add("AgainstInvoiceNo", "AgainstInvoiceNo");
            tableMapping.ColumnMappings.Add("AgainstInvoiceDate", "AgainstInvoiceDate");
            tableMapping.ColumnMappings.Add("ReturnQty", "ReturnQty");
            tableMapping.ColumnMappings.Add("QtyInKgs", "QtyInKgs");
            tableMapping.ColumnMappings.Add("GrossAmount", "GrossAmount");
            tableMapping.ColumnMappings.Add("TradeDiscount", "TradeDiscount");
            tableMapping.ColumnMappings.Add("OfferDiscount", "OfferDiscount");
            tableMapping.ColumnMappings.Add("TurnoverDiscount", "TurnoverDiscount");
            tableMapping.ColumnMappings.Add("TaxableValue", "TaxableValue");
            tableMapping.ColumnMappings.Add("SGSTAmt", "SGSTAmt");
            tableMapping.ColumnMappings.Add("CGSTAmt", "CGSTAmt");
            tableMapping.ColumnMappings.Add("IGSTAmt", "IGSTAmt");
            tableMapping.ColumnMappings.Add("CessAmount", "CessAmount");
            tableMapping.ColumnMappings.Add("CashDiscount", "CashDiscount");
            tableMapping.ColumnMappings.Add("RoundOff", "RoundOff");
            tableMapping.ColumnMappings.Add("TotalGST", "TotalGST");
            tableMapping.ColumnMappings.Add("ReturnInvoiceAmount", "ReturnInvoiceAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=ayurwaredb.ckfc7b36trzk.ap-south-1.rds.amazonaws.com,1433;Initial Cat" +
                "alog=AyurwareDevelopment;Persist Security Info=True;User ID=Ayurdbuser;Password=" +
                "\"cRmTY=yrjnrh\";MultipleActiveResultSets=True;Application Name=EntityFramework";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Reports.SpRptSalesReturnGSTReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDateFrom", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDateTo", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerTaxCategoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromCustomerRange", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToCustomerRange", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCategoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesCategoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromItemRange", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToItemRange", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNoFromID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNoToID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerGSTNoID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSTRateFrom", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSTRateTo", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplicationID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(
                    SalesReturnGSTDataSet.SpRptSalesReturnGSTReportDataTable dataTable, 
                    global::System.Nullable<global::System.DateTime> InvoiceDateFrom, 
                    global::System.Nullable<global::System.DateTime> InvoiceDateTo, 
                    global::System.Nullable<int> CustomerTaxCategoryID, 
                    string FromCustomerRange, 
                    string ToCustomerRange, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> ItemCategoryID, 
                    global::System.Nullable<int> SalesCategoryID, 
                    string FromItemRange, 
                    string ToItemRange, 
                    global::System.Nullable<int> ItemID, 
                    global::System.Nullable<int> InvoiceNoFromID, 
                    global::System.Nullable<int> InvoiceNoToID, 
                    global::System.Nullable<int> CustomerGSTNoID, 
                    global::System.Nullable<decimal> GSTRateFrom, 
                    global::System.Nullable<decimal> GSTRateTo, 
                    string TransactionType, 
                    global::System.Nullable<int> FinYear, 
                    global::System.Nullable<int> ApplicationID, 
                    global::System.Nullable<int> LocationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((InvoiceDateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(InvoiceDateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(InvoiceDateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CustomerTaxCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(CustomerTaxCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromCustomerRange == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(FromCustomerRange));
            }
            if ((ToCustomerRange == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ToCustomerRange));
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ItemCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(ItemCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SalesCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(SalesCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FromItemRange == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(FromItemRange));
            }
            if ((ToItemRange == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(ToItemRange));
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoFromID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(InvoiceNoFromID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoToID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(InvoiceNoToID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CustomerGSTNoID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(CustomerGSTNoID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GSTRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((decimal)(GSTRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((GSTRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((decimal)(GSTRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TransactionType == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(TransactionType));
            }
            if ((FinYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[18].Value = ((int)(FinYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ApplicationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[19].Value = ((int)(ApplicationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LocationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[20].Value = ((int)(LocationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalesReturnGSTDataSet.SpRptSalesReturnGSTReportDataTable GetData(
                    global::System.Nullable<global::System.DateTime> InvoiceDateFrom, 
                    global::System.Nullable<global::System.DateTime> InvoiceDateTo, 
                    global::System.Nullable<int> CustomerTaxCategoryID, 
                    string FromCustomerRange, 
                    string ToCustomerRange, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> ItemCategoryID, 
                    global::System.Nullable<int> SalesCategoryID, 
                    string FromItemRange, 
                    string ToItemRange, 
                    global::System.Nullable<int> ItemID, 
                    global::System.Nullable<int> InvoiceNoFromID, 
                    global::System.Nullable<int> InvoiceNoToID, 
                    global::System.Nullable<int> CustomerGSTNoID, 
                    global::System.Nullable<decimal> GSTRateFrom, 
                    global::System.Nullable<decimal> GSTRateTo, 
                    string TransactionType, 
                    global::System.Nullable<int> FinYear, 
                    global::System.Nullable<int> ApplicationID, 
                    global::System.Nullable<int> LocationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((InvoiceDateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(InvoiceDateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(InvoiceDateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CustomerTaxCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(CustomerTaxCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromCustomerRange == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(FromCustomerRange));
            }
            if ((ToCustomerRange == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ToCustomerRange));
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ItemCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(ItemCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SalesCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(SalesCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((FromItemRange == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(FromItemRange));
            }
            if ((ToItemRange == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(ToItemRange));
            }
            if ((ItemID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(ItemID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoFromID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(InvoiceNoFromID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoToID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(InvoiceNoToID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CustomerGSTNoID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(CustomerGSTNoID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GSTRateFrom.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((decimal)(GSTRateFrom.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((GSTRateTo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((decimal)(GSTRateTo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TransactionType == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(TransactionType));
            }
            if ((FinYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[18].Value = ((int)(FinYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ApplicationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[19].Value = ((int)(ApplicationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LocationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[20].Value = ((int)(LocationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            SalesReturnGSTDataSet.SpRptSalesReturnGSTReportDataTable dataTable = new SalesReturnGSTDataSet.SpRptSalesReturnGSTReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SalesReturnGSTDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SalesReturnGSTDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SalesReturnGSTDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SalesReturnGSTDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591