<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountCategoryFrom" xml:space="preserve">
    <value>Account Category From</value>
  </data>
  <data name="AccountCategoryTo" xml:space="preserve">
    <value>Account Category To</value>
  </data>
  <data name="AssetCapital" xml:space="preserve">
    <value>Asset Capital</value>
  </data>
  <data name="AssetList" xml:space="preserve">
    <value>Asset List</value>
  </data>
  <data name="AssetName" xml:space="preserve">
    <value>Asset Name</value>
  </data>
  <data name="AssetNameFrom" xml:space="preserve">
    <value>Asset Name From</value>
  </data>
  <data name="AssetNameTo" xml:space="preserve">
    <value>Asset Name To</value>
  </data>
  <data name="Assets" xml:space="preserve">
    <value>Asset</value>
  </data>
  <data name="AssetValue" xml:space="preserve">
    <value>Asset Value</value>
  </data>
  <data name="Capitalise" xml:space="preserve">
    <value>Capital</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="ReceiptNoFrom" xml:space="preserve">
    <value>Receipt No From</value>
  </data>
  <data name="ReceiptNoTo" xml:space="preserve">
    <value>Receipt No To</value>
  </data>
  <data name="Revenue" xml:space="preserve">
    <value>Revenue</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="SupplierNameFrom" xml:space="preserve">
    <value>Supplier Name From</value>
  </data>
  <data name="SupplierNameTo" xml:space="preserve">
    <value>Supplier Name To</value>
  </data>
  <data name="TransDateFrom" xml:space="preserve">
    <value>Trans Date From</value>
  </data>
  <data name="TransDateTo" xml:space="preserve">
    <value>Trans Date To</value>
  </data>
  <data name="TransNoFrom" xml:space="preserve">
    <value>Trans No From</value>
  </data>
  <data name="TransNoTo" xml:space="preserve">
    <value>Trans No To</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="AccountCategory" xml:space="preserve">
    <value>Account Category</value>
  </data>
  <data name="AdditionToAssetNo" xml:space="preserve">
    <value>Addition To Asset No</value>
  </data>
  <data name="AssetDate" xml:space="preserve">
    <value>Asset Date</value>
  </data>
  <data name="AssetUniqueNo" xml:space="preserve">
    <value>Asset Unique No</value>
  </data>
  <data name="CompaniesDepreciationRate" xml:space="preserve">
    <value>Companies Depreciation Rate</value>
  </data>
  <data name="CreateAsset" xml:space="preserve">
    <value>Create Asset</value>
  </data>
  <data name="IncomeTax" xml:space="preserve">
    <value>Income Tax Depreciation Rate</value>
  </data>
  <data name="IsRepairable" xml:space="preserve">
    <value>Is Repairable</value>
  </data>
  <data name="StatusChangeDate" xml:space="preserve">
    <value>Status Change Date</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="FinancialAssetName" xml:space="preserve">
    <value>Financial Asset Name</value>
  </data>
  <data name="LifeInYears" xml:space="preserve">
    <value>LifeInYears</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="NewItemName" xml:space="preserve">
    <value>New Item Name</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="ResidualValue" xml:space="preserve">
    <value>Residual Value</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TransDate" xml:space="preserve">
    <value>Trans Date</value>
  </data>
  <data name="TransNo" xml:space="preserve">
    <value>Trans No</value>
  </data>
  <data name="DepreciationEndDate" xml:space="preserve">
    <value>Depreciation End Date</value>
  </data>
  <data name="DepreciationStartDate" xml:space="preserve">
    <value>Depreciation Start Date</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="CurrentValue" xml:space="preserve">
    <value>Current Value</value>
  </data>
  <data name="Depreciation" xml:space="preserve">
    <value>Depreciation</value>
  </data>
  <data name="DepreciationList" xml:space="preserve">
    <value>Depreciation List</value>
  </data>
  <data name="DepreciationType" xml:space="preserve">
    <value>Depreciation Type</value>
  </data>
  <data name="FromDepreciationRate" xml:space="preserve">
    <value>From Depreciation Rate</value>
  </data>
  <data name="FromPeriod" xml:space="preserve">
    <value>From Period</value>
  </data>
  <data name="ToDepreciationRate" xml:space="preserve">
    <value>To Depreciation Rate</value>
  </data>
  <data name="ToPeriod" xml:space="preserve">
    <value>To Period</value>
  </data>
  <data name="FromComapnyDepreciationRate" xml:space="preserve">
    <value>From Comapny Depreciation Rate</value>
  </data>
  <data name="FromIncomeTaxDepreciationRate" xml:space="preserve">
    <value>From Income Tax Depreciation Rate</value>
  </data>
  <data name="ToComapnyDepreciationRate" xml:space="preserve">
    <value>To Comapny Depreciation Rate</value>
  </data>
  <data name="ToIncomeTaxDepreciationRate" xml:space="preserve">
    <value>To Income Tax Depreciation Rate</value>
  </data>
  <data name="CreateDepreciation" xml:space="preserve">
    <value>Create Depreciation</value>
  </data>
  <data name="AccumulatedDepreciation" xml:space="preserve">
    <value>Accumulated Depreciation</value>
  </data>
  <data name="DateOfCapitalisation" xml:space="preserve">
    <value>Date Of Capitalisation</value>
  </data>
  <data name="DepreciationDate" xml:space="preserve">
    <value>Depreciation Date</value>
  </data>
  <data name="DepreciationPer" xml:space="preserve">
    <value>Depreciation %</value>
  </data>
  <data name="DepreciationRate" xml:space="preserve">
    <value>Depreciation Rate in %</value>
  </data>
  <data name="DepreciationValue" xml:space="preserve">
    <value>Depreciation Value</value>
  </data>
  <data name="GrossBlockValue" xml:space="preserve">
    <value>Gross Block Value</value>
  </data>
  <data name="OpeningWDV" xml:space="preserve">
    <value>Opening WDV</value>
  </data>
  <data name="Process" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="WDVValue" xml:space="preserve">
    <value>WDV Value</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ChangeStatus" xml:space="preserve">
    <value>Change Status</value>
  </data>
  <data name="AssetQty" xml:space="preserve">
    <value>Asset Qty</value>
  </data>
  <data name="Correction" xml:space="preserve">
    <value>Correction</value>
  </data>
  <data name="CorrectionList" xml:space="preserve">
    <value>Correction List</value>
  </data>
  <data name="AssetCodeFrom" xml:space="preserve">
    <value>Asset Code From</value>
  </data>
  <data name="AssetCodeTo" xml:space="preserve">
    <value>Asset Code To</value>
  </data>
  <data name="AdditionDuringYear" xml:space="preserve">
    <value>Addition During Year</value>
  </data>
  <data name="AssetCode" xml:space="preserve">
    <value>Asset Code</value>
  </data>
  <data name="AssetCorrection" xml:space="preserve">
    <value>Asset Correction</value>
  </data>
  <data name="AssetSubLedger" xml:space="preserve">
    <value>Asset Sub Ledger</value>
  </data>
  <data name="CreateAssetCorrection" xml:space="preserve">
    <value>Create Asset Correction</value>
  </data>
  <data name="CreditACCode" xml:space="preserve">
    <value>Credit AC Code</value>
  </data>
  <data name="CreditACName" xml:space="preserve">
    <value>Credit AC Name</value>
  </data>
  <data name="DebitACCode" xml:space="preserve">
    <value>Debit AC Code</value>
  </data>
  <data name="DebitACName" xml:space="preserve">
    <value>Debit AC Name</value>
  </data>
  <data name="DepreciationForYear" xml:space="preserve">
    <value>Depreciation For Year</value>
  </data>
  <data name="CapitalizationDateFrom" xml:space="preserve">
    <value>Capitalise Date From</value>
  </data>
  <data name="CapitalizationDateTo" xml:space="preserve">
    <value>Capitalise Date To</value>
  </data>
  <data name="Retirement" xml:space="preserve">
    <value>Retirement</value>
  </data>
  <data name="RetirementList" xml:space="preserve">
    <value>Retirement List</value>
  </data>
  <data name="CapitalizationDate" xml:space="preserve">
    <value>Capitalization Date</value>
  </data>
  <data name="ClosingAccumulatedDepreciation" xml:space="preserve">
    <value>Closing Accumulated Depreciation</value>
  </data>
  <data name="ClosingGrossBlockValue" xml:space="preserve">
    <value>Closing Gross Block Value</value>
  </data>
  <data name="ClosingWDV" xml:space="preserve">
    <value>Closing WDV</value>
  </data>
  <data name="CreateCorrection" xml:space="preserve">
    <value>Create Correction</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="SaleQty" xml:space="preserve">
    <value>Sale Qty</value>
  </data>
  <data name="SaleValue" xml:space="preserve">
    <value>Sale Value</value>
  </data>
  <data name="AmountValue" xml:space="preserve">
    <value>Amount Value</value>
  </data>
  <data name="CorrectionDate" xml:space="preserve">
    <value>Correction Date</value>
  </data>
  <data name="CorrectionNumber" xml:space="preserve">
    <value>Correction Number</value>
  </data>
  <data name="CreateRetirement" xml:space="preserve">
    <value>Create Retirement</value>
  </data>
  <data name="CumilativeDepreciationValue" xml:space="preserve">
    <value>Cu Depreciation Value</value>
  </data>
</root>