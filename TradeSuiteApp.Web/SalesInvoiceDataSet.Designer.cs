//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TradeSuiteApp.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SalesInvoiceDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SalesInvoiceDataSet : global::System.Data.DataSet {
        
        private SpRptSalesInvoiceDataTable tableSpRptSalesInvoice;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SalesInvoiceDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected SalesInvoiceDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SpRptSalesInvoice"] != null)) {
                    base.Tables.Add(new SpRptSalesInvoiceDataTable(ds.Tables["SpRptSalesInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpRptSalesInvoiceDataTable SpRptSalesInvoice {
            get {
                return this.tableSpRptSalesInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SalesInvoiceDataSet cln = ((SalesInvoiceDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SpRptSalesInvoice"] != null)) {
                    base.Tables.Add(new SpRptSalesInvoiceDataTable(ds.Tables["SpRptSalesInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSpRptSalesInvoice = ((SpRptSalesInvoiceDataTable)(base.Tables["SpRptSalesInvoice"]));
            if ((initTable == true)) {
                if ((this.tableSpRptSalesInvoice != null)) {
                    this.tableSpRptSalesInvoice.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SalesInvoiceDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SalesInvoiceDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSpRptSalesInvoice = new SpRptSalesInvoiceDataTable();
            base.Tables.Add(this.tableSpRptSalesInvoice);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeSpRptSalesInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SalesInvoiceDataSet ds = new SalesInvoiceDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void SpRptSalesInvoiceRowChangeEventHandler(object sender, SpRptSalesInvoiceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpRptSalesInvoiceDataTable : global::System.Data.TypedTableBase<SpRptSalesInvoiceRow> {
            
            private global::System.Data.DataColumn columnLocationName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnSalesCategory;
            
            private global::System.Data.DataColumn columnItemCategory;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnBatchType;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnInvoiceQty;
            
            private global::System.Data.DataColumn columnInvoiceQtyInKgs;
            
            private global::System.Data.DataColumn columnInvoiceOfferQty;
            
            private global::System.Data.DataColumn columnInvoiceOfferQtyKgs;
            
            private global::System.Data.DataColumn columnGrossValue;
            
            private global::System.Data.DataColumn columnTOD;
            
            private global::System.Data.DataColumn columnTradeDiscount;
            
            private global::System.Data.DataColumn columnAdditionalDiscount;
            
            private global::System.Data.DataColumn columnTaxableAmt;
            
            private global::System.Data.DataColumn columnSGSTAmt;
            
            private global::System.Data.DataColumn columnCGSTAmt;
            
            private global::System.Data.DataColumn columnIGSTAmt;
            
            private global::System.Data.DataColumn columnTotalGST;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnRoundOff;
            
            private global::System.Data.DataColumn columnCashDiscount;
            
            private global::System.Data.DataColumn columnNetValue;
            
            private global::System.Data.DataColumn columnDiscountAmt;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnMRP;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnCustomerPONo;
            
            private global::System.Data.DataColumn columnCustomerPODate;
            
            private global::System.Data.DataColumn columnPaymentMode;
            
            private global::System.Data.DataColumn columnSalesTypeName;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnPartsNumber;
            
            private global::System.Data.DataColumn columnSecondaryUnit;
            
            private global::System.Data.DataColumn columnSalesOrders;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnFreightAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceDataTable() {
                this.TableName = "SpRptSalesInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SpRptSalesInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected SpRptSalesInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalesCategoryColumn {
                get {
                    return this.columnSalesCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ItemCategoryColumn {
                get {
                    return this.columnItemCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BatchTypeColumn {
                get {
                    return this.columnBatchType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceQtyColumn {
                get {
                    return this.columnInvoiceQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceQtyInKgsColumn {
                get {
                    return this.columnInvoiceQtyInKgs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceOfferQtyColumn {
                get {
                    return this.columnInvoiceOfferQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceOfferQtyKgsColumn {
                get {
                    return this.columnInvoiceOfferQtyKgs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GrossValueColumn {
                get {
                    return this.columnGrossValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TODColumn {
                get {
                    return this.columnTOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TradeDiscountColumn {
                get {
                    return this.columnTradeDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AdditionalDiscountColumn {
                get {
                    return this.columnAdditionalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TaxableAmtColumn {
                get {
                    return this.columnTaxableAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SGSTAmtColumn {
                get {
                    return this.columnSGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CGSTAmtColumn {
                get {
                    return this.columnCGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IGSTAmtColumn {
                get {
                    return this.columnIGSTAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalGSTColumn {
                get {
                    return this.columnTotalGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RoundOffColumn {
                get {
                    return this.columnRoundOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CashDiscountColumn {
                get {
                    return this.columnCashDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NetValueColumn {
                get {
                    return this.columnNetValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DiscountAmtColumn {
                get {
                    return this.columnDiscountAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MRPColumn {
                get {
                    return this.columnMRP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerPONoColumn {
                get {
                    return this.columnCustomerPONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerPODateColumn {
                get {
                    return this.columnCustomerPODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PaymentModeColumn {
                get {
                    return this.columnPaymentMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalesTypeNameColumn {
                get {
                    return this.columnSalesTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PartsNumberColumn {
                get {
                    return this.columnPartsNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SecondaryUnitColumn {
                get {
                    return this.columnSecondaryUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalesOrdersColumn {
                get {
                    return this.columnSalesOrders;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FreightAmountColumn {
                get {
                    return this.columnFreightAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceRow this[int index] {
                get {
                    return ((SpRptSalesInvoiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SpRptSalesInvoiceRowChangeEventHandler SpRptSalesInvoiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SpRptSalesInvoiceRowChangeEventHandler SpRptSalesInvoiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SpRptSalesInvoiceRowChangeEventHandler SpRptSalesInvoiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SpRptSalesInvoiceRowChangeEventHandler SpRptSalesInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddSpRptSalesInvoiceRow(SpRptSalesInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceRow AddSpRptSalesInvoiceRow(
                        string LocationName, 
                        string CustomerCode, 
                        string CustomerName, 
                        string State, 
                        string ItemCode, 
                        string ItemName, 
                        string SalesCategory, 
                        string ItemCategory, 
                        string BatchNo, 
                        string BatchType, 
                        string InvoiceNo, 
                        System.DateTime InvoiceDate, 
                        decimal InvoiceQty, 
                        decimal InvoiceQtyInKgs, 
                        decimal InvoiceOfferQty, 
                        decimal InvoiceOfferQtyKgs, 
                        decimal GrossValue, 
                        decimal TOD, 
                        decimal TradeDiscount, 
                        decimal AdditionalDiscount, 
                        decimal TaxableAmt, 
                        decimal SGSTAmt, 
                        decimal CGSTAmt, 
                        decimal IGSTAmt, 
                        decimal TotalGST, 
                        decimal CessAmount, 
                        decimal RoundOff, 
                        decimal CashDiscount, 
                        decimal NetValue, 
                        decimal DiscountAmt, 
                        string Model, 
                        decimal MRP, 
                        decimal VATAmount, 
                        string CustomerPONo, 
                        System.DateTime CustomerPODate, 
                        string PaymentMode, 
                        string SalesTypeName, 
                        string CurrencyCode, 
                        string PartsNumber, 
                        string SecondaryUnit, 
                        string SalesOrders, 
                        string Remarks, 
                        decimal FreightAmount) {
                SpRptSalesInvoiceRow rowSpRptSalesInvoiceRow = ((SpRptSalesInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LocationName,
                        CustomerCode,
                        CustomerName,
                        State,
                        ItemCode,
                        ItemName,
                        SalesCategory,
                        ItemCategory,
                        BatchNo,
                        BatchType,
                        InvoiceNo,
                        InvoiceDate,
                        InvoiceQty,
                        InvoiceQtyInKgs,
                        InvoiceOfferQty,
                        InvoiceOfferQtyKgs,
                        GrossValue,
                        TOD,
                        TradeDiscount,
                        AdditionalDiscount,
                        TaxableAmt,
                        SGSTAmt,
                        CGSTAmt,
                        IGSTAmt,
                        TotalGST,
                        CessAmount,
                        RoundOff,
                        CashDiscount,
                        NetValue,
                        DiscountAmt,
                        Model,
                        MRP,
                        VATAmount,
                        CustomerPONo,
                        CustomerPODate,
                        PaymentMode,
                        SalesTypeName,
                        CurrencyCode,
                        PartsNumber,
                        SecondaryUnit,
                        SalesOrders,
                        Remarks,
                        FreightAmount};
                rowSpRptSalesInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpRptSalesInvoiceRow);
                return rowSpRptSalesInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SpRptSalesInvoiceDataTable cln = ((SpRptSalesInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpRptSalesInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLocationName = base.Columns["LocationName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnState = base.Columns["State"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnSalesCategory = base.Columns["SalesCategory"];
                this.columnItemCategory = base.Columns["ItemCategory"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnBatchType = base.Columns["BatchType"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnInvoiceQty = base.Columns["InvoiceQty"];
                this.columnInvoiceQtyInKgs = base.Columns["InvoiceQtyInKgs"];
                this.columnInvoiceOfferQty = base.Columns["InvoiceOfferQty"];
                this.columnInvoiceOfferQtyKgs = base.Columns["InvoiceOfferQtyKgs"];
                this.columnGrossValue = base.Columns["GrossValue"];
                this.columnTOD = base.Columns["TOD"];
                this.columnTradeDiscount = base.Columns["TradeDiscount"];
                this.columnAdditionalDiscount = base.Columns["AdditionalDiscount"];
                this.columnTaxableAmt = base.Columns["TaxableAmt"];
                this.columnSGSTAmt = base.Columns["SGSTAmt"];
                this.columnCGSTAmt = base.Columns["CGSTAmt"];
                this.columnIGSTAmt = base.Columns["IGSTAmt"];
                this.columnTotalGST = base.Columns["TotalGST"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnRoundOff = base.Columns["RoundOff"];
                this.columnCashDiscount = base.Columns["CashDiscount"];
                this.columnNetValue = base.Columns["NetValue"];
                this.columnDiscountAmt = base.Columns["DiscountAmt"];
                this.columnModel = base.Columns["Model"];
                this.columnMRP = base.Columns["MRP"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnCustomerPONo = base.Columns["CustomerPONo"];
                this.columnCustomerPODate = base.Columns["CustomerPODate"];
                this.columnPaymentMode = base.Columns["PaymentMode"];
                this.columnSalesTypeName = base.Columns["SalesTypeName"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnPartsNumber = base.Columns["PartsNumber"];
                this.columnSecondaryUnit = base.Columns["SecondaryUnit"];
                this.columnSalesOrders = base.Columns["SalesOrders"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnFreightAmount = base.Columns["FreightAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnSalesCategory = new global::System.Data.DataColumn("SalesCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCategory);
                this.columnItemCategory = new global::System.Data.DataColumn("ItemCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCategory);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnBatchType = new global::System.Data.DataColumn("BatchType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchType);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnInvoiceQty = new global::System.Data.DataColumn("InvoiceQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceQty);
                this.columnInvoiceQtyInKgs = new global::System.Data.DataColumn("InvoiceQtyInKgs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceQtyInKgs);
                this.columnInvoiceOfferQty = new global::System.Data.DataColumn("InvoiceOfferQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceOfferQty);
                this.columnInvoiceOfferQtyKgs = new global::System.Data.DataColumn("InvoiceOfferQtyKgs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceOfferQtyKgs);
                this.columnGrossValue = new global::System.Data.DataColumn("GrossValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossValue);
                this.columnTOD = new global::System.Data.DataColumn("TOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOD);
                this.columnTradeDiscount = new global::System.Data.DataColumn("TradeDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeDiscount);
                this.columnAdditionalDiscount = new global::System.Data.DataColumn("AdditionalDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdditionalDiscount);
                this.columnTaxableAmt = new global::System.Data.DataColumn("TaxableAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableAmt);
                this.columnSGSTAmt = new global::System.Data.DataColumn("SGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGSTAmt);
                this.columnCGSTAmt = new global::System.Data.DataColumn("CGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGSTAmt);
                this.columnIGSTAmt = new global::System.Data.DataColumn("IGSTAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGSTAmt);
                this.columnTotalGST = new global::System.Data.DataColumn("TotalGST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGST);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnRoundOff = new global::System.Data.DataColumn("RoundOff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundOff);
                this.columnCashDiscount = new global::System.Data.DataColumn("CashDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashDiscount);
                this.columnNetValue = new global::System.Data.DataColumn("NetValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetValue);
                this.columnDiscountAmt = new global::System.Data.DataColumn("DiscountAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmt);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnMRP = new global::System.Data.DataColumn("MRP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRP);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnCustomerPONo = new global::System.Data.DataColumn("CustomerPONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerPONo);
                this.columnCustomerPODate = new global::System.Data.DataColumn("CustomerPODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerPODate);
                this.columnPaymentMode = new global::System.Data.DataColumn("PaymentMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMode);
                this.columnSalesTypeName = new global::System.Data.DataColumn("SalesTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTypeName);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnPartsNumber = new global::System.Data.DataColumn("PartsNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsNumber);
                this.columnSecondaryUnit = new global::System.Data.DataColumn("SecondaryUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondaryUnit);
                this.columnSalesOrders = new global::System.Data.DataColumn("SalesOrders", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrders);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnFreightAmount = new global::System.Data.DataColumn("FreightAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightAmount);
                this.columnLocationName.ReadOnly = true;
                this.columnLocationName.MaxLength = 50;
                this.columnCustomerCode.ReadOnly = true;
                this.columnCustomerCode.MaxLength = 20;
                this.columnCustomerName.ReadOnly = true;
                this.columnCustomerName.MaxLength = 200;
                this.columnState.ReadOnly = true;
                this.columnState.MaxLength = 50;
                this.columnItemCode.ReadOnly = true;
                this.columnItemCode.MaxLength = 25;
                this.columnItemName.ReadOnly = true;
                this.columnItemName.MaxLength = 100;
                this.columnSalesCategory.ReadOnly = true;
                this.columnSalesCategory.MaxLength = 50;
                this.columnItemCategory.ReadOnly = true;
                this.columnItemCategory.MaxLength = 50;
                this.columnBatchNo.ReadOnly = true;
                this.columnBatchNo.MaxLength = 20;
                this.columnBatchType.ReadOnly = true;
                this.columnBatchType.MaxLength = 20;
                this.columnInvoiceNo.ReadOnly = true;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnInvoiceDate.ReadOnly = true;
                this.columnInvoiceQty.ReadOnly = true;
                this.columnInvoiceQtyInKgs.ReadOnly = true;
                this.columnInvoiceOfferQty.ReadOnly = true;
                this.columnInvoiceOfferQtyKgs.ReadOnly = true;
                this.columnGrossValue.ReadOnly = true;
                this.columnTOD.ReadOnly = true;
                this.columnTradeDiscount.ReadOnly = true;
                this.columnAdditionalDiscount.ReadOnly = true;
                this.columnTaxableAmt.ReadOnly = true;
                this.columnSGSTAmt.ReadOnly = true;
                this.columnCGSTAmt.ReadOnly = true;
                this.columnIGSTAmt.ReadOnly = true;
                this.columnTotalGST.ReadOnly = true;
                this.columnCessAmount.ReadOnly = true;
                this.columnRoundOff.ReadOnly = true;
                this.columnCashDiscount.ReadOnly = true;
                this.columnNetValue.ReadOnly = true;
                this.columnDiscountAmt.ReadOnly = true;
                this.columnModel.ReadOnly = true;
                this.columnModel.MaxLength = 200;
                this.columnMRP.ReadOnly = true;
                this.columnVATAmount.ReadOnly = true;
                this.columnCustomerPONo.ReadOnly = true;
                this.columnCustomerPONo.MaxLength = 200;
                this.columnCustomerPODate.ReadOnly = true;
                this.columnPaymentMode.ReadOnly = true;
                this.columnPaymentMode.MaxLength = 100;
                this.columnSalesTypeName.ReadOnly = true;
                this.columnSalesTypeName.MaxLength = 50;
                this.columnCurrencyCode.ReadOnly = true;
                this.columnCurrencyCode.MaxLength = 3;
                this.columnPartsNumber.ReadOnly = true;
                this.columnPartsNumber.MaxLength = 450;
                this.columnSecondaryUnit.ReadOnly = true;
                this.columnSecondaryUnit.MaxLength = 200;
                this.columnSalesOrders.ReadOnly = true;
                this.columnSalesOrders.MaxLength = 100;
                this.columnRemarks.ReadOnly = true;
                this.columnRemarks.MaxLength = 255;
                this.columnFreightAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceRow NewSpRptSalesInvoiceRow() {
                return ((SpRptSalesInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpRptSalesInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SpRptSalesInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpRptSalesInvoiceRowChanged != null)) {
                    this.SpRptSalesInvoiceRowChanged(this, new SpRptSalesInvoiceRowChangeEvent(((SpRptSalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpRptSalesInvoiceRowChanging != null)) {
                    this.SpRptSalesInvoiceRowChanging(this, new SpRptSalesInvoiceRowChangeEvent(((SpRptSalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpRptSalesInvoiceRowDeleted != null)) {
                    this.SpRptSalesInvoiceRowDeleted(this, new SpRptSalesInvoiceRowChangeEvent(((SpRptSalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpRptSalesInvoiceRowDeleting != null)) {
                    this.SpRptSalesInvoiceRowDeleting(this, new SpRptSalesInvoiceRowChangeEvent(((SpRptSalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveSpRptSalesInvoiceRow(SpRptSalesInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalesInvoiceDataSet ds = new SalesInvoiceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpRptSalesInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpRptSalesInvoiceRow : global::System.Data.DataRow {
            
            private SpRptSalesInvoiceDataTable tableSpRptSalesInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SpRptSalesInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpRptSalesInvoice = ((SpRptSalesInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalesCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.SalesCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCategory\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.SalesCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ItemCategory {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.ItemCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCategory\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.ItemCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BatchType {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.BatchTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchType\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.BatchTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpRptSalesInvoice.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal InvoiceQty {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.InvoiceQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceQty\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal InvoiceQtyInKgs {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.InvoiceQtyInKgsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceQtyInKgs\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceQtyInKgsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal InvoiceOfferQty {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.InvoiceOfferQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceOfferQty\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceOfferQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal InvoiceOfferQtyKgs {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.InvoiceOfferQtyKgsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceOfferQtyKgs\' in table \'SpRptSalesInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.InvoiceOfferQtyKgsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GrossValue {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.GrossValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossValue\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.GrossValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOD {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.TODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOD\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.TODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TradeDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.TradeDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeDiscount\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.TradeDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AdditionalDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.AdditionalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdditionalDiscount\' in table \'SpRptSalesInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.AdditionalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TaxableAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.TaxableAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableAmt\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.TaxableAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.SGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGSTAmt\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.SGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.CGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGSTAmt\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal IGSTAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.IGSTAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGSTAmt\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.IGSTAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalGST {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.TotalGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalGST\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.TotalGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RoundOff {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.RoundOffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoundOff\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.RoundOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CashDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.CashDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashDiscount\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CashDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NetValue {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.NetValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetValue\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.NetValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DiscountAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.DiscountAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmt\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.DiscountAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.ModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Model\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MRP {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.MRPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRP\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.MRPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerPONo {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.CustomerPONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerPONo\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CustomerPONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CustomerPODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpRptSalesInvoice.CustomerPODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerPODate\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CustomerPODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PaymentMode {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.PaymentModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMode\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.PaymentModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalesTypeName {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.SalesTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTypeName\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.SalesTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PartsNumber {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.PartsNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartsNumber\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.PartsNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SecondaryUnit {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.SecondaryUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondaryUnit\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.SecondaryUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalesOrders {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.SalesOrdersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesOrders\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.SalesOrdersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSpRptSalesInvoice.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal FreightAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSpRptSalesInvoice.FreightAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightAmount\' in table \'SpRptSalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpRptSalesInvoice.FreightAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationNameNull() {
                this[this.tableSpRptSalesInvoice.LocationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerCodeNull() {
                this[this.tableSpRptSalesInvoice.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tableSpRptSalesInvoice.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStateNull() {
                this[this.tableSpRptSalesInvoice.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetItemCodeNull() {
                this[this.tableSpRptSalesInvoice.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetItemNameNull() {
                this[this.tableSpRptSalesInvoice.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalesCategoryNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.SalesCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalesCategoryNull() {
                this[this.tableSpRptSalesInvoice.SalesCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsItemCategoryNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.ItemCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetItemCategoryNull() {
                this[this.tableSpRptSalesInvoice.ItemCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBatchNoNull() {
                this[this.tableSpRptSalesInvoice.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBatchTypeNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.BatchTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBatchTypeNull() {
                this[this.tableSpRptSalesInvoice.BatchTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceNoNull() {
                this[this.tableSpRptSalesInvoice.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableSpRptSalesInvoice.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceQtyNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceQtyNull() {
                this[this.tableSpRptSalesInvoice.InvoiceQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceQtyInKgsNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceQtyInKgsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceQtyInKgsNull() {
                this[this.tableSpRptSalesInvoice.InvoiceQtyInKgsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceOfferQtyNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceOfferQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceOfferQtyNull() {
                this[this.tableSpRptSalesInvoice.InvoiceOfferQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceOfferQtyKgsNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.InvoiceOfferQtyKgsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceOfferQtyKgsNull() {
                this[this.tableSpRptSalesInvoice.InvoiceOfferQtyKgsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGrossValueNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.GrossValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGrossValueNull() {
                this[this.tableSpRptSalesInvoice.GrossValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTODNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.TODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTODNull() {
                this[this.tableSpRptSalesInvoice.TODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTradeDiscountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.TradeDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTradeDiscountNull() {
                this[this.tableSpRptSalesInvoice.TradeDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAdditionalDiscountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.AdditionalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAdditionalDiscountNull() {
                this[this.tableSpRptSalesInvoice.AdditionalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTaxableAmtNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.TaxableAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTaxableAmtNull() {
                this[this.tableSpRptSalesInvoice.TaxableAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.SGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSGSTAmtNull() {
                this[this.tableSpRptSalesInvoice.SGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCGSTAmtNull() {
                this[this.tableSpRptSalesInvoice.CGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIGSTAmtNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.IGSTAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIGSTAmtNull() {
                this[this.tableSpRptSalesInvoice.IGSTAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalGSTNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.TotalGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalGSTNull() {
                this[this.tableSpRptSalesInvoice.TotalGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCessAmountNull() {
                this[this.tableSpRptSalesInvoice.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRoundOffNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.RoundOffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRoundOffNull() {
                this[this.tableSpRptSalesInvoice.RoundOffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCashDiscountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CashDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCashDiscountNull() {
                this[this.tableSpRptSalesInvoice.CashDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNetValueNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.NetValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNetValueNull() {
                this[this.tableSpRptSalesInvoice.NetValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDiscountAmtNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.DiscountAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDiscountAmtNull() {
                this[this.tableSpRptSalesInvoice.DiscountAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModelNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.ModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModelNull() {
                this[this.tableSpRptSalesInvoice.ModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMRPNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.MRPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMRPNull() {
                this[this.tableSpRptSalesInvoice.MRPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVATAmountNull() {
                this[this.tableSpRptSalesInvoice.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerPONoNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CustomerPONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerPONoNull() {
                this[this.tableSpRptSalesInvoice.CustomerPONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerPODateNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CustomerPODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerPODateNull() {
                this[this.tableSpRptSalesInvoice.CustomerPODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPaymentModeNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.PaymentModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPaymentModeNull() {
                this[this.tableSpRptSalesInvoice.PaymentModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalesTypeNameNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.SalesTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalesTypeNameNull() {
                this[this.tableSpRptSalesInvoice.SalesTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCurrencyCodeNull() {
                this[this.tableSpRptSalesInvoice.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPartsNumberNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.PartsNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPartsNumberNull() {
                this[this.tableSpRptSalesInvoice.PartsNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSecondaryUnitNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.SecondaryUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSecondaryUnitNull() {
                this[this.tableSpRptSalesInvoice.SecondaryUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalesOrdersNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.SalesOrdersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalesOrdersNull() {
                this[this.tableSpRptSalesInvoice.SalesOrdersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableSpRptSalesInvoice.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFreightAmountNull() {
                return this.IsNull(this.tableSpRptSalesInvoice.FreightAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFreightAmountNull() {
                this[this.tableSpRptSalesInvoice.FreightAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class SpRptSalesInvoiceRowChangeEvent : global::System.EventArgs {
            
            private SpRptSalesInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceRowChangeEvent(SpRptSalesInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SpRptSalesInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TradeSuiteApp.Web.SalesInvoiceDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SpRptSalesInvoiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SpRptSalesInvoiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SpRptSalesInvoice";
            tableMapping.ColumnMappings.Add("LocationName", "LocationName");
            tableMapping.ColumnMappings.Add("CustomerCode", "CustomerCode");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("ItemCode", "ItemCode");
            tableMapping.ColumnMappings.Add("ItemName", "ItemName");
            tableMapping.ColumnMappings.Add("SalesCategory", "SalesCategory");
            tableMapping.ColumnMappings.Add("ItemCategory", "ItemCategory");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("BatchType", "BatchType");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("InvoiceQty", "InvoiceQty");
            tableMapping.ColumnMappings.Add("InvoiceQtyInKgs", "InvoiceQtyInKgs");
            tableMapping.ColumnMappings.Add("InvoiceOfferQty", "InvoiceOfferQty");
            tableMapping.ColumnMappings.Add("InvoiceOfferQtyKgs", "InvoiceOfferQtyKgs");
            tableMapping.ColumnMappings.Add("GrossValue", "GrossValue");
            tableMapping.ColumnMappings.Add("TOD", "TOD");
            tableMapping.ColumnMappings.Add("TradeDiscount", "TradeDiscount");
            tableMapping.ColumnMappings.Add("AdditionalDiscount", "AdditionalDiscount");
            tableMapping.ColumnMappings.Add("TaxableAmt", "TaxableAmt");
            tableMapping.ColumnMappings.Add("SGSTAmt", "SGSTAmt");
            tableMapping.ColumnMappings.Add("CGSTAmt", "CGSTAmt");
            tableMapping.ColumnMappings.Add("IGSTAmt", "IGSTAmt");
            tableMapping.ColumnMappings.Add("TotalGST", "TotalGST");
            tableMapping.ColumnMappings.Add("CessAmount", "CessAmount");
            tableMapping.ColumnMappings.Add("RoundOff", "RoundOff");
            tableMapping.ColumnMappings.Add("CashDiscount", "CashDiscount");
            tableMapping.ColumnMappings.Add("NetValue", "NetValue");
            tableMapping.ColumnMappings.Add("DiscountAmt", "DiscountAmt");
            tableMapping.ColumnMappings.Add("Model", "Model");
            tableMapping.ColumnMappings.Add("MRP", "MRP");
            tableMapping.ColumnMappings.Add("VATAmount", "VATAmount");
            tableMapping.ColumnMappings.Add("CustomerPONo", "CustomerPONo");
            tableMapping.ColumnMappings.Add("CustomerPODate", "CustomerPODate");
            tableMapping.ColumnMappings.Add("PaymentMode", "PaymentMode");
            tableMapping.ColumnMappings.Add("SalesTypeName", "SalesTypeName");
            tableMapping.ColumnMappings.Add("CurrencyCode", "CurrencyCode");
            tableMapping.ColumnMappings.Add("PartsNumber", "PartsNumber");
            tableMapping.ColumnMappings.Add("SecondaryUnit", "SecondaryUnit");
            tableMapping.ColumnMappings.Add("SalesOrders", "SalesOrders");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("FreightAmount", "FreightAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DalmaDXBTestJulyConnectionString4"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Reports.SpRptSalesInvoice";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Location", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchTypeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNoFromID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNoToID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerStateID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemType", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentType", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemCategoryID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinYear", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApplicationID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(
                    SalesInvoiceDataSet.SpRptSalesInvoiceDataTable dataTable, 
                    global::System.Nullable<global::System.DateTime> FromDate, 
                    global::System.Nullable<global::System.DateTime> ToDate, 
                    global::System.Nullable<int> Location, 
                    global::System.Nullable<int> BatchTypeID, 
                    global::System.Nullable<int> CustomerID, 
                    global::System.Nullable<int> InvoiceNoFromID, 
                    global::System.Nullable<int> InvoiceNoToID, 
                    global::System.Nullable<int> CustomerStateID, 
                    string ItemType, 
                    string PaymentType, 
                    global::System.Nullable<int> ItemCategoryID, 
                    global::System.Nullable<int> UserID, 
                    global::System.Nullable<int> FinYear, 
                    global::System.Nullable<int> LocationID, 
                    global::System.Nullable<int> ApplicationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Location.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(Location.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BatchTypeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(BatchTypeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoFromID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(InvoiceNoFromID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoToID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(InvoiceNoToID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CustomerStateID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CustomerStateID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ItemType == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(ItemType));
            }
            if ((PaymentType == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(PaymentType));
            }
            if ((ItemCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(ItemCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FinYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(FinYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((LocationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(LocationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ApplicationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(ApplicationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalesInvoiceDataSet.SpRptSalesInvoiceDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> Location, global::System.Nullable<int> BatchTypeID, global::System.Nullable<int> CustomerID, global::System.Nullable<int> InvoiceNoFromID, global::System.Nullable<int> InvoiceNoToID, global::System.Nullable<int> CustomerStateID, string ItemType, string PaymentType, global::System.Nullable<int> ItemCategoryID, global::System.Nullable<int> UserID, global::System.Nullable<int> FinYear, global::System.Nullable<int> LocationID, global::System.Nullable<int> ApplicationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Location.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(Location.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BatchTypeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(BatchTypeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CustomerID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(CustomerID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoFromID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(InvoiceNoFromID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((InvoiceNoToID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(InvoiceNoToID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CustomerStateID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CustomerStateID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ItemType == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(ItemType));
            }
            if ((PaymentType == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(PaymentType));
            }
            if ((ItemCategoryID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(ItemCategoryID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FinYear.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(FinYear.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((LocationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(LocationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ApplicationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(ApplicationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            SalesInvoiceDataSet.SpRptSalesInvoiceDataTable dataTable = new SalesInvoiceDataSet.SpRptSalesInvoiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(SalesInvoiceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(SalesInvoiceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(SalesInvoiceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(SalesInvoiceDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591