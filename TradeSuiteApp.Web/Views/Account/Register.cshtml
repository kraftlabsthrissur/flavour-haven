@model TradeSuiteApp.Web.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title.</h2>

<div id="page_content">
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <div class="heading_actions">
            <a  data-uk-tooltip="{pos:'bottom'}" title="Print"><i class="md-icon material-icons">&#xE8AD;</i></a>
            <div data-uk-dropdown>
                <i class="md-icon material-icons">&#xE5D4;</i>
                <div class="uk-dropdown uk-dropdown-small">
                    <ul class="uk-nav">
                        <li><a >@Common.Action</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <span class="uk-text-upper uk-text-small">@*@GRN.*@State List</span>
    </div>
    <div id="page_content_inner">
        <div class="md-card uk-margin-medium-bottom">
            <div class="md-card-content">
                <div class="row">
                    <div class="col-md-8">
                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary()
                            @Html.HiddenFor(m=>m.LocationIDs, new { @id="hdnLocationIDs"})
                            <h4>Create a new account.</h4>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email)
                                <div class="uk-width-medium-1-5">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "md-input label-fixed" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password)
                                <div class="uk-width-medium-1-5">
                                    @Html.PasswordFor(m => m.Password, new { @class = "md-input label-fixed" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword)
                                <div class="uk-width-medium-1-5">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "md-input label-fixed" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.LocationIDs)
                                <div class="uk-width-medium-1-5">
                                   @* @Html.DropDownList("ddlLocation", new SelectList(ViewBag.Locations, "Value", "Text"), new { @class = "md-input label-fixed label-fixed", @id = "ddlLocation", multiple= "multiple" })*@
                                </div>
                            </div>
                            <div>

                            </div>
                            <div class="form-group">
                                <input type="submit" class="md-btn" value="Register" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>    @Scripts.Render("~/Js/Common")

    <script>
        $(function () {
            var $select=  $('#ddlLocation').selectize({
                plugin: { 'remove_button': { 'label': '' } }
               
            });


            $select.on('change', function () {
                //console.log($select[0].selectize.items);
                $('#hdnLocationIDs').val($select[0].selectize.items);
            });
            //var selectizeControl = $select[0].selectize

        });
    </script>
