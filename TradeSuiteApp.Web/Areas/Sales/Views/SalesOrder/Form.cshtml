@model TradeSuiteApp.Web.Areas.Sales.Models.SalesOrderModel
@{
    ViewBag.Title = "Form";
}
<div class="section-group">
    <div class="uk-form-row">
        <div class="uk-grid" data-uk-grid-margin="">
            <div class="uk-width-medium-8-10">

                <div class="md-card-content">
                    <ul class="uk-tab" data-uk-tab="{connect:'#tabs-sales-order-create-content',animation:'slide-horizontal'}" id="tabs-sales-order-create">
                        <li class="uk-active" data-tab="main"><a>Main Fields</a></li>
                        <li class="" data-tab="optional"><a>Optional Fields</a></li>
                    </ul>
                    <ul id="tabs-sales-order-create-content" class="uk-switcher uk-margin">
                        <li>

                            <div class="uk-form-row">
                                <div class="uk-grid" data-uk-grid-margin="">
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.OrderNo</label>
                                        @Html.TextBoxFor(model => model.SONo, new { @class = "md-input label-fixed", @readonly = "readonly" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label for="uk_dp_start">@Sales.OrderDate</label>
                                        @Html.TextBoxFor(model => model.SODate, new { @class = "md-input label-fixed", @readonly = "readonly" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <div class="uk-input-group">
                                            <label for="uk_dp_start">@Sales.DespatchDate</label>
                                            @Html.TextBoxFor(model => model.DespatchDate, new { @class = "md-input label-fixed date future-date" })
                                            <span class="uk-input-group-addon"><i class="uk-input-group-icon uk-icon-calendar future-date"></i></span>
                                        </div>
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <div class="uk-input-group">
                                            <label for="uk_dp_start">@Sales.QuotationExpiry</label>
                                            @Html.TextBoxFor(model => model.QuotationExpiry, new { @class = "md-input label-fixed date future-date" })
                                            <span class="uk-input-group-addon"><i class="uk-input-group-icon uk-icon-calendar future-date"></i></span>
                                        </div>
                                    </div>
     

                                    <div class="uk-width-medium-1-8">
                                        <label for="uk_dp_start">@Sales.BillTo</label>
                                        @Html.DropDownListFor(model => model.BillingAddressID, Model.BillingAddressList, new { @class = "md-input label-fixed" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label for="uk_dp_start">@Sales.ShippTo</label>
                                        @Html.DropDownListFor(model => model.ShippingAddressID, Model.ShippingAddressList, new { @class = "md-input label-fixed" })
                                    </div>

                     

                                </div>
                            </div>
                            <div class="uk-form-row">
                                <div class="uk-grid" data-uk-grid-margin>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.GrossAmt</label>
                                        @Html.TextBoxFor(model => model.GrossAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = " - 1", @readonly = "readonly" })
                                    </div>

                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.TaxableAmount</label>
                                        @Html.TextBoxFor(model => model.TaxableAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.DiscountPercent <span></span></label>
                                        @*<input type="text" id="DiscPercentage" class="md-input mask-sales2-currency label-fixed" />*@
                                        @Html.TextBoxFor(model => model.DiscountPercentage, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @id = "DiscPercentage" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.DiscountAmount <span></span></label>
                                        @Html.TextBoxFor(model => model.DiscountAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1",  @id = "DiscAmount" })
                                        @*<input type="text" id="DiscAmount" class="md-input label-fixed @Model.normalclass" />*@
                                    </div>

                                    @if (Model.IsGST == 1)
                                    {
                                        <div class="uk-width-medium-1-8">
                                            <label>@Sales.SGST</label>
                                            @Html.TextBoxFor(model => model.SGSTAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                        </div>
                                        <div class="uk-width-medium-1-8">
                                            <label>@Sales.CGST</label>
                                            @Html.TextBoxFor(model => model.CGSTAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                        </div>
                                        <div class="uk-width-medium-1-8">
                                            <label>@Sales.IGST</label>
                                            @Html.TextBoxFor(model => model.IGSTAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                        </div>
                                    }
                                    @if (Model.IsVat == 1)
                                    {
                                        <div class="uk-width-medium-1-8">
                                            <label>@Sales.VATPercentage</label>
                                            @Html.DropDownListFor(Model => Model.VATPercentageID, new SelectList(Model.VATPercentageList, "Value", "Text"), new { @class = "md-input label-fixed" })
                                        </div>
                                        <div class="uk-width-medium-1-8">
                                            <label>@Sales.VATAmount</label>
                                            @Html.TextBoxFor(model => model.VATAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                        </div>
                                    }

                                    <div class="uk-width-medium-1-8 cess-enabled uk-hidden">
                                        <label>@Sales.CessAmount</label>
                                        @Html.TextBoxFor(model => model.CessAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.Remarks</label>
                                        @Html.TextBoxFor(model => model.Remarks, new { @class = "md-input label-fixed" })
                                    </div>

                                </div>
                            </div>
                        </li>

                        <li>
                            <div class="uk-form-row">
                                <div class="uk-grid" data-uk-grid-margin="">
                                    <div class="uk-width-medium-1-8">
                                        <label for="uk_dp_start">@Sales.CustomerCategory</label>
                                        @if (Model.ID > 0)
                                        {
                                            @Html.DropDownListFor(model => model.CustomerCategoryID, Model.CustomerCategoryList, "Select", new { @class = "md-input label-fixed", @disabled = "disabled" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.CustomerCategoryID, Model.CustomerCategoryList, "Select", new { @class = "md-input label-fixed" })
                                        }
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label for="uk_dp_start">Sales Category</label>
                                        @Html.DropDownListFor(Model => Model.SalesCategoryID, Model.SalesCategoryList, "Select", new { @class = "md-input label-fixed" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Masters.CurrencyName</label>
                                        @Html.TextBoxFor(model => model.CurrencyName, new { @class = "md-input label-fixed", @tabindex = "-1", @disabled = "disabled" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Masters.ExchangeRate</label>
                                        @Html.TextBoxFor(model => model.CurrencyExchangeRate, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>

                            <div class="uk-form-row">
                                <div class="uk-grid" data-uk-grid-margin="">
                                    <div class="uk-width-medium-2-8">
                                        <label>@Sales.PaymentTerms</label>
                                        @Html.TextBoxFor(model => model.PaymentTerms, new { @class = "md-input label-fixed" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <label>@Sales.CustomerEnquiryNumber</label>
                                        @Html.TextBoxFor(model => model.CustomerEnquiryNumber, new { @class = "md-input label-fixed" })
                                    </div>
                                    <div class="uk-width-medium-1-8">
                                        <div class="uk-input-group">
                                            <label for="uk_dp_start">@Sales.EnquiryDate</label>
                                            @Html.TextBoxFor(model => model.EnquiryDate, new { @class = "md-input label-fixed date past-date" })
                                            <span class="uk-input-group-addon"><i class="uk-input-group-icon uk-icon-calendar past-date"></i></span>
                                        </div>
                                    </div>
                                    <div class="uk-width-medium-1-8 uk-hidden">
                                        <label>@Sales.DiscAmt</label>
                                        @Html.TextBoxFor(model => model.DiscountAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                    </div>
                                    <div class="uk-width-medium-1-8 uk-hidden">
                                        <label>@Sales.RoundOff</label>
                                        @Html.TextBoxFor(model => model.RoundOff, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                                    </div>



                                    <div class="uk-width-medium-1-8 uk-hidden ecommerce-hide">
                                        <label>@Sales.Freight</label>
                                        @Html.TextBoxFor(model => model.FreightAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>

            </div>
            <div class="uk-width-medium-2-10">
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-1-1">
                            <label>@Sales.NetAmount</label>
                            @Html.TextBoxFor(model => model.NetAmount, new { @class = "md-input label-fixed x-large " + Model.normalclass, @tabindex = "-1", @readonly = "readonly" })
                            @Html.Hidden("NetAmountValue")
                        </div>
                        <div class="uk-width-medium-1-1">
                            <label>@Masters.CurrencyCode</label>
                            @Html.TextBoxFor(model => model.CurrencyCode, new { @class = "md-input label-fixed", @tabindex = "-1", @Disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="uk-form-row">
        <div class="uk-grid" data-uk-grid-margin>
            @if (Model.ID > 0)
            {
                <div class="uk-width-medium-2-10">
                    <label>@Sales.CustomerName<span>*</span></label>
                    @Html.TextBox("CustomerName", Model.CustomerName, new { @class = "md-input label-fixed", @readonly = "readonly" })
                </div>
            }
            else
            {
                <div class="uk-width-medium-2-10">
                    <div class="uk-autocomplete " id="customer-autocomplete">
                        <div class="uk-input-group">
                            <label for="uk_dp_start">@Sales.CustomerName<span>*</span></label>
                            @Html.TextBox("CustomerName", Model.CustomerName, new { @class = "md-input label-fixed" })
                            <span class="uk-input-group-addon">
                                <a data-uk-modal="{target:'#select-customer',center:false}">
                                    <i class="uk-input-group-icon uk-icon-search"></i>
                                </a>
                            </span>
                            <script type="text/autocomplete">
                             <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                 {{~items}}
                                 <li data-value="{{ $item.Name }}"
                                     data-id="{{$item.ID}}"
                                     data-code="{{$item.Code}}"
                                     data-CustomerCategoryID="{{$item.CustomerCategoryID}}"
                                     data-CustomerCategory="{{$item.CustomerCategory}}"
                                     data-location="{{$item.Location}}"
                                     data-state-id="{{$item.StateID}}"
                                     data-price-list-id="{{$item.PriceListID}}"
                                     data-scheme-id="{{$item.SchemeID}}"
                                     data-is-gst-registered="{{$item.IsGSTRegistered}}">
                                     <a>
                                         {{ $item.Name }} ({{{ $item.Code }}})
                                         <div>{{{ $item.Location }}}</div>
                                     </a>
                                 </li>
                                 {{/items}}
                             </ul>
                            </script>
                        </div>
                    </div>
                </div>
            }

            @Html.HiddenFor(model => model.CustomerID)
            @Html.HiddenFor(model => model.StateID)
            @Html.HiddenFor(model => model.PriceListID)
            @Html.HiddenFor(model => model.IsGSTRegistered)
            @Html.HiddenFor(model => model.LocationStateID)
            @Html.HiddenFor(model => model.BatchTypeID)
            @Html.HiddenFor(model => model.BatchType)
            @Html.HiddenFor(model => model.PartsNumber)
            @Html.HiddenFor(model => model.SchemeID)
            @Html.HiddenFor(model => model.StoreID)
            @Html.HiddenFor(model => model.CurrencyID)
            @Html.HiddenFor(model => model.CustomerCategory)
            @Html.HiddenFor(model => model.IsPriceEditable)
            @Html.HiddenFor(model => model.IsGST)
            @Html.HiddenFor(model => model.IsVat)
            @Html.HiddenFor(model => model.TaxTypeID)
            @Html.HiddenFor(model => model.CountryID)
            @Html.HiddenFor(model => model.DecimalPlaces)
            @Html.HiddenFor(model => model.normalclass)
            @Html.Hidden("HistoryItemID")
            @Html.Hidden("CheckStock", false)
            @Html.Hidden("IsApproved", 1)
            @Html.HiddenFor(model => model.IsVATExtra)
            @if (Model.PurchaseOrderID == 0)
            {

                <div class="uk-width-medium-1-10 uk-hidden">
                    <label for="uk_dp_start">@Sales.ItemCategory</label>
                    @Html.DropDownListFor(Model => Model.ItemCategoryID, Model.ItemCategoryList, new { @class = "md-input label-fixed" })
                </div>

                <div class="uk-width-medium-2-10">
                    <div class="uk-autocomplete " id="item-autocomplete">
                        <div class="uk-input-group">
                            <label>@Sales.ItemName <span>*</span></label>
                            <input type="text" id="ItemName" class="md-input label-fixed" />
                            <span class="uk-input-group-addon">
                                <a data-uk-modal="{target:'#select-item',center:false}">
                                    <i class="uk-input-group-icon uk-icon-search"></i>
                                </a>
                            </span>
                            <script type="text/autocomplete">
                                <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                    {{~items}}
                                    <li data-value="{{ $item.Name }}"
                                        data-id="{{$item.ID}}"
                                        data-code="{{$item.Code}}"
                                        data-unit="{{$item.Unit}}"
                                        data-unit-id="{{$item.UnitID}}"
                                        data-sale-unit="{{$item.SalesUnit}}"
                                        data-sale-unit-id="{{$item.SalesUnitID}}"
                                        data-CGSTPercentage="{{$item.CGSTPercentage}}"
                                        data-IGSTPercentage="{{$item.IGSTPercentage}}"
                                        data-SGSTPercentage="{{$item.SGSTPercentage}}"
                                        data-cess-percentage="{{$item.CessPercentage}}"
                                        data-VATPercentage="{{$item.VATPercentage}}"
                                        data-model="{{$item.Model}}"
                                        data-remarks="{{$item.Remarks}}"
                                        data-PartsNumber="{{$item.PartsNumber}}"
                                        data-loose-rate="{{$item.LooseRate}}"
                                        data-rate="{{$item.Rate}}"
                                        data-MaxSalesQtyLoose="{{$item.MaxSalesQtyLoose}}"
                                        data-MinSalesQtyFull="{{$item.MinSalesQtyFull}}"
                                        data-MinSalesQtyLoose="{{$item.MinSalesQtyLoose}}"
                                        data-MaxSalesQtyFull="{{$item.MaxSalesQtyFull}}"
                                        data-category="{{$item.ItemCategory}}"
                                        data-stock="{{$item.Stock}}">
                                        <a>
                                            {{ $item.Name }}
                                            <div>{{$item.Code}}&nbsp; (Remarks : {{$item.Remarks}})
                                            &nbsp; (Model : {{$item.Model}}) &nbsp; (Stock : {{$item.Stock}})</div>
                                        </a>
                                    </li>
                                    {{/items}}
                                </ul>
                            </script>
                        </div>
                    </div>
                    @Html.Hidden("ItemID")
                    @Html.Hidden("Code")
                    @Html.Hidden("PrimaryUnit")
                    @Html.Hidden("PrimaryUnitID")
                    @Html.Hidden("SalesUnit")
                    @Html.Hidden("SalesUnitID")
                    @Html.Hidden("Stock")
                    @Html.Hidden("DiscountPercentage")
                    @Html.Hidden("CGSTPercentage")
                    @Html.Hidden("IGSTPercentage")
                    @Html.Hidden("SGSTPercentage")
                    @Html.Hidden("VATPercentage")
                    @Html.Hidden("Remarks")
                    @Html.Hidden("Model")
                    @Html.Hidden("TaxType")
                    @Html.Hidden("CessPercentage")
                    @Html.Hidden("LooseRate")
                    @Html.Hidden("Category")
                    @Html.Hidden("MaxSalesQtyFull")
                    @Html.Hidden("MinSalesQtyLoose")
                    @Html.Hidden("MinSalesQtyFull")
                    @Html.Hidden("MaxSalesQtyLoose")
                    @Html.Hidden("SecondaryUnits")
                </div>
                <div class="uk-width-medium-1-10">
                    <label>@Sales.Unit </label>
                    @Html.DropDownListFor(Model => Model.UnitID, Model.UnitList, "Select", new { @class = "md-input label-fixed" })
                </div>
                <div class="uk-width-medium-1-10">
                    <label>@Sales.Qty <span>*</span></label>
                    <input type="text" id="Qty" class="md-input mask-sales2-currency label-fixed" />
                </div>
                <div class="uk-width-medium-1-10 uk-hidden">
                    <label>@Sales.OfferQty <span></span></label>
                    <input type="text" id="OfferQty" class="md-input mask-sales2-currency label-fixed" />
                </div>
                <div class="uk-width-medium-1-10">
                    <label>@Sales.Rate <span></span></label>
                    <input type="text" id="Rate" class="md-input label-fixed  @Model.normalclass" />
                </div>
                <div class="uk-width-medium-1-10">
                    <div class="md-input-wrapper md-input-filled">
                        <label>&nbsp;</label>
                        <button class="md-btn md-btn-primary md-btn-block md-btn-wave-light waves-effect waves-button waves-light" id="btnAddItem">@Common.Add</button>
                    </div>
                </div>

                <div class="uk-width-medium-1-10 uk-hidden">
                    <div class="md-input-wrapper md-input-filled">
                        <label>&nbsp;</label>
                        <input type="text" id="Offers" class="md-input label-fixed" />
                    </div>
                </div>




            }
        </div>
    </div>
</div>
<div class="section-group">
    <table id="sales-order-items-list" class="uk-table" cellspacing="0" style="width:100%;">
        <thead>
            @if (Model.IsGST == 1)
            {
                <tr>
                    <th class="width-20"></th>
                    <th class="width-10">@Common.SerialNo</th>
                    <th class="width-50">@Sales.ItemCode</th>
                    <th class="width-120">@Sales.ItemName</th>
                    <th class="width-60">@Sales.PartsNumber</th>
                    <th class="width-60">@Sales.DeliveryTerm</th>
                    <th class="width-120">@Masters.Model_Make</th>
                    <th class="width-20">@Sales.Unit</th>
                    @*<th class="width-20">@Sales.BatchType</th>*@
                    <th class="width-20">@Masters.Currency</th>
                    <th class="width-60 mrp_hidden">@Sales.MRP</th>
                    <th class="width-60">@Sales.BasicPrice</th>
                    <th class="width-60">@Sales.Qty</th>
                    <th class="width-20 uk-hidden">@Sales.OfferQty</th>
                    <th class="width-80">@Sales.GrossAmt</th>
                    <th class="width-40">@Sales.Disc</th>
                    <th class="width-60">@Sales.DiscAmt</th>
                    @*<th class="width-60">@Sales.AdditionalDiscount</th>*@
                    <th class="width-80">@Sales.TaxableAmount</th>
                    <th class="width-20">@Sales.GST</th>
                    <th class="width-40">@Sales.GSTAmount</th>
                    <th class="width-20 cess-enabled">@Sales.Cess</th>
                    <th class="width-40 cess-enabled">@Sales.CessAmount</th>
                    <th class="width-100">@Sales.NetAmount</th>
                    <th class="width-20"></th>
                </tr>
            }
            else if (Model.IsVat == 1)
            {
                <tr>
                    <th class="width-20"></th>
                    <th class="width-10">@Common.SerialNo</th>
                    <th class="width-60">@Sales.ItemCode</th>
                    <th class="width-120">@Sales.ItemName</th>
                    <th class="width-60">@Sales.PartsNumber</th>
                    <th class="width-60">@Sales.DeliveryTerm</th>
                    <th class="width-120">@Masters.Model_Make</th>
                    <th class="width-60">@Sales.Unit</th>
                    @*<th class="width-20">@Sales.BatchType</th>*@
                    <th class="width-20">@Masters.Currency</th>
                    <th class="width-60 mrp_hidden">@Sales.MRP</th>
                    @*<th class="width-60">@Sales.BasicPrice</th>*@
                    <th class="width-60">@Sales.Qty</th>
                    <th class="width-30 uk-hidden">@Sales.OfferQty</th>
                    <th class="width-80">@Sales.GrossAmt</th>
                    <th class="width-40">@Sales.Disc</th>
                    <th class="width-60">@Sales.DiscAmt</th>
                    @*<th class="width-60">@Sales.AdditionalDiscount</th>*@
                    <th class="width-80">@Sales.TaxableAmount</th>
                    <th class="width-30">@Sales.VAT</th>
                    <th class="width-40">@Sales.VATAmount</th>
                    @*<th class="width-20 cess-enabled">@Sales.Cess</th>
                        <th class="width-40 cess-enabled">@Sales.CessAmount</th>*@
                    <th class="width-100">@Sales.NetAmount</th>
                    <th class="width-20"></th>
                </tr>
            }
        </thead>
        <tbody>
            @if (Model.Items != null)
            {
                foreach (var item in Model.Items.Select((value, i) => new { i = (i + 1), value }))
                {
                    if (Model.IsGST == 1)
                    {
                        <tr data-uk-tooltip="{cls:long-text}" title="">
                            <td class="uk-text-center showitemhistory action">
                                <a class="view-itemhistory">
                                    <i class="uk-icon-eye-slash"></i>
                                </a>
                            </td>
                            <td class="uk-text-center">@item.i</td>
                            <td class="">
                                @item.value.ItemCode
                                <input type="hidden" class="ItemID" value="@item.value.ItemID" />
                                <input type="hidden" class="SalesOrderItemID" value="@item.value.SalesOrderItemID" />
                                <input type="hidden" class="UnitID" value="@item.value.UnitID" />
                                <input type="hidden" class="CurrencyID" value="@item.value.CurrencyID" />
                                <input type="hidden" class="IsVat" value="@item.value.IsVat" />
                                <input type="hidden" class="IsGST" value="@item.value.IsGST" />
                                <input type="hidden" class="ExchangeRate" value="@item.value.ExchangeRate" />
                                <input type="hidden" class="TaxTypeID" value="@item.value.TaxTypeID" />
                                <input type="hidden" class="IGSTPercentage" value="@item.value.IGSTPercentage" />
                                <input type="hidden" class="SGSTPercentage" value="@item.value.SGSTPercentage" />
                                <input type="hidden" class="CGSTPercentage" value="@item.value.CGSTPercentage" />
                                <input type="hidden" class="IGST" value="@item.value.IGST" />
                                <input type="hidden" class="SGST" value="@item.value.SGST" />
                                <input type="hidden" class="CGST" value="@item.value.CGST" />
                                <input type="hidden" class="MinSalesQty" value="@item.value.MinSalesQty" />
                                <input type="hidden" class="MaxSalesQty" value="@item.value.MaxSalesQty" />
                                <input type="hidden" class="Category" value="@item.value.Category" />
                            </td>
                            <td><input type="text" class="md-input Name" value="@item.value.ItemName" /></td>
                            <td><input type="text" class="md-input PartsNumber" value="@item.value.PartsNumber" /></td>
                            <td><input type="text" class="md-input DeliveryTerm" value=" @item.value.DeliveryTerm" />  </td>
                            <td><input type="text" class="md-input Model" value=" @item.value.Model" /> </td>
                            <td> @item.value.UnitName  </td>
                            @*<td class="BatchType"> @item.value.BatchType  </td>*@
                            <td class="CurrencyName"> @item.value.CurrencyName  </td>
                            @{
                                var isPriceEditable = Model.IsPriceEditable;
                            }
                            @if (@isPriceEditable == 1)
                            {
                                <td class="mrp_hidden"><input type="text" class="md-input MRP @Model.normalclass" value="@item.value.MRP" /></td>
                            }
                            else
                            {
                                <td class="mrp_hidden"><input type="text" class="mask-sales2-currency MRP " value="@item.value.MRP" readonly="readonly" /></td>
                            }
                            <td><input type="text" class="BasicPrice @Model.normalclass" value="@item.value.BasicPrice" readonly="readonly" /></td>
                            <td><input type="text" class="md-input mask-sales2-currency Qty" value="@item.value.Qty" /></td>
                            <td class="uk-hidden"><input type="text" class="mask-sales2-currency OfferQty" value="@item.value.OfferQty" readonly="readonly" /></td>
                            <td><input type="text" class="GrossAmount @Model.normalclass" value='@item.value.GrossAmount.ToString("0.00")' readonly="readonly" /></td>
                            <td><input type="text" class="mask-sales2-currency DiscountPercentage" value="@item.value.DiscountPercentage" readonly="readonly" /></td>
                            <td><input type="text" class="DiscountAmount @Model.normalclass" value="@item.value.DiscountAmount" readonly="readonly" /></td>
                            <td><input type="text" class="AdditionalDiscount @Model.normalclass" value="@item.value.AdditionalDiscount" readonly="readonly" /></td>
                            <td><input type="text" class="TaxableAmount @Model.normalclass" value='@item.value.TaxableAmount' readonly="readonly" /></td>
                            <td><input type="text" class="GST @Model.normalclass" value="@item.value.IGSTPercentage" readonly="readonly" /></td>
                            <td><input type="text" class="GSTAmount @Model.normalclass" value="@item.value.GSTAmount" readonly="readonly" /></td>
                            <td class="cess-enabled"><input type="text" class="CessPercentage @Model.normalclass" value="@item.value.CessPercentage" readonly="readonly" /></td>
                            <td class="cess-enabled"><input type="text" class="CessAmount @Model.normalclass" value="@item.value.CessAmount" readonly="readonly" /></td>
                            <td><input type="text" class="NetAmount @Model.normalclass" value="@item.value.NetAmount" readonly="readonly" /></td>
                            <td class="uk-text-center">
                                @if (Model.PurchaseOrderID == 0)
                                {
                                    <a class="remove-item">
                                        <i class="uk-icon-remove"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                    else if (Model.IsVat == 1)
                    {
                        <tr data-uk-tooltip="{cls:long-text}" title="">
                            <td class="uk-text-center showitemhistory action">
                                <a class="view-itemhistory">
                                    <i class="uk-icon-eye-slash"></i>
                                </a>
                            </td>
                            <td class="uk-text-center">@item.i</td>
                            <td class="">
                                @item.value.ItemCode
                                <input type="hidden" class="ItemID" value="@item.value.ItemID" />
                                <input type="hidden" class="SalesOrderItemID" value="@item.value.SalesOrderItemID" />
                                <input type="hidden" class="UnitID" value="@item.value.UnitID" />
                                <input type="hidden" class="CurrencyID" value="@item.value.CurrencyID" />
                                <input type="hidden" class="IsVat" value="@item.value.IsVat" />
                                <input type="hidden" class="IsGST" value="@item.value.IsGST" />
                                <input type="hidden" class="ExchangeRate" value="@item.value.ExchangeRate" />
                                <input type="hidden" class="TaxTypeID" value="@item.value.TaxTypeID" />
                                <input type="hidden" class="VATPercentage" value="@item.value.VATPercentage" />
                                <input type="hidden" class="MinSalesQty" value="@item.value.MinSalesQty" />
                                <input type="hidden" class="MaxSalesQty" value="@item.value.MaxSalesQty" />
                                <input type="hidden" class="Category" value="@item.value.Category" />
                            </td>
                            <td><input type="text" class="md-input Name" value="@item.value.ItemName" /></td>
                            <td><input type="text" class="md-input PartsNumber" value="@item.value.PartsNumber" /></td>
                            <td><input type="text" class="md-input DeliveryTerm" value=" @item.value.DeliveryTerm" />  </td>
                            <td><input type="text" class="md-input Model" value=" @item.value.Model" /> </td>
                            <td class="uk-hidden"> @item.value.UnitName  </td>
                            <td class="secondary">
                                <select class="md-input label-fixed secondaryUnit">
                                    @foreach (var option in item.value.SecondaryUnitList)
                                    {
                                        <option value="@option.PackSize" @(option.PackSize == item.value.SecondaryUnitSize ? "selected" : "")>@option.Name</option>
                                    }
                                </select>
                            </td>
                            @*<td class="BatchType"> @item.value.BatchType  </td>*@
                            <td class="CurrencyName"> @item.value.CurrencyName  </td>
                            @{
                                var isPriceEditable = Model.IsPriceEditable;
                            }
                            @if (@isPriceEditable == 1)
                            {
                                <td class="uk-hidden mrp_hidden"><input type="text" class="md-input MRP  @Model.normalclass" value="@item.value.MRP" /></td>
                                <td class="secondary"><input type="text" class="md-input secondaryMRP @Model.normalclass included" value="@item.value.SecondaryMRP" /></td>
                            }
                            else
                            {
                                <td class="uk-hidden mrp_hidden"><input type="text" class="md-input MRP @Model.normalclass" value="@item.value.MRP" /></td>
                                <td class="secondary"><input type="text" class="md-input secondaryMRP @Model.normalclass included" value="@item.value.SecondaryMRP" /></td>

                            }
                            @*<td><input type="text" class="BasicPrice " + @Model.normalclass value="@item.value.BasicPrice" readonly="readonly" /></td>*@
                            <td class="uk-hidden"><input type="text" class="md-input mask-sales2-currency Qty" value="@item.value.Qty" /></td>
                            <td class="secondary"><input type="text" class="md-input mask-sales2-currency secondaryQty included" value="@item.value.SecondaryQty" /></td>
                            <td class="uk-hidden"><input type="text" class="mask-sales2-currency OfferQty" value="@item.value.OfferQty" readonly="readonly" /></td>
                            <td><input type="text" class="md-input GrossAmount @Model.normalclass" value="@item.value.GrossAmount" readonly="readonly" /></td>
                            <td><input type="text" class="md-input mask-sales2-currency DiscountPercentage" value="@item.value.DiscountPercentage" /></td>
                            <td><input type="text" class="md-input DiscountAmount @Model.normalclass" value="@item.value.DiscountAmount" /></td>
                            @*<td><input type="text" class="AdditionalDiscount " + @Model.normalclass value="@item.value.AdditionalDiscount" readonly="readonly" /></td>*@
                            <td><input type="text" class="TaxableAmount @Model.normalclass" value='@item.value.TaxableAmount' readonly="readonly" /></td>
                            <td><input type="text" class="VATPercentage mask-sales2-currency" value="@item.value.VATPercentage" readonly="readonly" /></td>
                            <td><input type="text" class="VATAmount @Model.normalclass" value="@item.value.VATAmount" readonly="readonly" /></td>
                            @*<td class="cess-enabled"><input type="text" class="mask-sales2-currency CessPercentage" value="@item.value.CessPercentage" readonly="readonly" /></td>
                                <td class="cess-enabled"><input type="text" class="mask-sales2-currency CessAmount" value="@item.value.CessAmount" readonly="readonly" /></td>*@
                            <td><input type="text" class="NetAmount @Model.normalclass" value="@item.value.NetAmount" readonly="readonly" /></td>
                            <td class="uk-text-center">
                                @if (Model.PurchaseOrderID == 0)
                                {
                                    <a class="remove-item">
                                        <i class="uk-icon-remove"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
    <input type="hidden" value="@Model.Items.Count()" id="item-count">
</div>
@Html.Partial("~/Areas/Masters/Views/Customer/CustomerPartialList.cshtml")
@Html.Partial("/Areas/Sales/Views/SalesOrder/HistoryList.cshtml")
@Html.Partial("~/Areas/Masters/Views/Item/PartialList.cshtml")