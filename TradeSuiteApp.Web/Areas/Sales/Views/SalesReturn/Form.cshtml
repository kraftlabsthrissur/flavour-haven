@model TradeSuiteApp.Web.Areas.Sales.Models.SalesReturnModel
@{
    ViewBag.Title = "Create Sales Return";
}

<div class="section-group">
    <div class="uk-form-row">
        <div class="uk-grid" data-uk-grid-margin>
            <div class="uk-width-medium-8-10">
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.ReturnNo</label>
                            @Html.TextBoxFor(model => model.SRNo, new { @class = "md-input label-fixed", @disabled = "disabled" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.ReturnDate</label>
                            @Html.TextBoxFor(model => model.SRDate, new { @class = "md-input label-fixed current-date date", @disabled = "disabled" })
                        </div>
                        @if (Model.ID <= 0)
                        {
                            <div class="uk-width-medium-1-8">

                                <label for="uk_dp_start">@Sales.CustomerType</label>
                                @Html.DropDownListFor(model => model.CustomerCategoryID, Model.CustomerCategoryList, "Select", new { @class = "md-input label-fixed" })

                            </div>}
                        <div class="uk-width-medium-2-8">
                            @if (Model.ID <= 0)
                            {
                                <div class="uk-autocomplete " id="customer-autocomplete">
                                    <div class="uk-input-group">
                                        <label>@Sales.CustomerName<span>*</span></label>
                                        @Html.TextBox("CustomerName", "", new { @class = "md-input label-fixed" })
                                        <span class="uk-input-group-addon">
                                            <a data-uk-modal="{target:'#select-customer',center:false}">
                                                <i class="uk-input-group-icon uk-icon-search"></i>
                                            </a>
                                        </span>
                                        <script type="text/autocomplete">
                                            <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                                {{~items}}
                                                <li data-value="{{ $item.Name }}"
                                                    data-id="{{$item.ID}}"
                                                    data-code="{{$item.Code}}"
                                                    data-location="{{$item.Location}}"
                                                    data-state-id="{{$item.StateID}}"
                                                    data-customer-category-id="{{$item.CustomerCategoryID}}"
                                                    data-price-list-id="{{$item.PriceListID}}"
                                                    data-is-gst-registered="{{$item.IsGSTRegistered}}">
                                                    <a>
                                                        {{ $item.Name }} ({{{ $item.Code }}})
                                                        <div>{{{ $item.Location }}}</div>
                                                    </a>
                                                </li>
                                                {{/items}}
                                            </ul>
                                        </script>
                                    </div>
                                </div>
                            }
                            else
                            { <label>@Sales.CustomerName<span>*</span></label>

                            @Html.TextBoxFor(model => model.CustomerName, new { @class = "md-input", @disabled = "disabled" })
                        }

                            @Html.HiddenFor(model => model.CustomerID)
                            @Html.HiddenFor(model => model.StateID)
                            @Html.HiddenFor(model => model.GrossAmount)
                            @Html.HiddenFor(model => model.CGSTAmount)
                            @Html.HiddenFor(model => model.SGSTAmount)
                            @Html.HiddenFor(model => model.IGSTAmount)
                            @Html.HiddenFor(model => model.LocationStateID)
                            @Html.HiddenFor(model => model.PriceListID)
                            @Html.Hidden("CustomerIDDummy")
                        </div>

                        <div class="uk-width-medium-2-8">
                            <div class="uk-autocomplete " id="invoice-no-autocomplete">
                                <div class="uk-input-group">
                                    <label>@Sales.SelectInvoice<span>*</span></label>
                                    @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "md-input label-fixed" })
                                    <span class="uk-input-group-addon">
                                        <a class="GetInvoice" data-uk-modal="{target:'#add-invoice'}">
                                            <i class="uk-input-group-icon uk-icon-search"></i>
                                        </a>
                                    </span>
                                </div>
                            </div>
                            @Html.HiddenFor(model => model.SalesInvoiceID)
                        </div>
                        @Html.HiddenFor(m => m.IsNewInvoice)
                        @if (Model.ID > 0)
                        {
                            var IsNewInvoicechecked = Model.IsNewInvoice == true ? "checked" : "";
                            <div class="uk-width-medium-1-8">
                                <br />
                                <label>Is Old Invoice</label>
                                <input type='checkbox' data-md-icheck class='is-new-invoice' @IsNewInvoicechecked disabled />

                            </div>
                        }
                        else
                        {
                            <div class="uk-width-medium-1-8">
                                <br />
                                <label>Is Old Invoice</label>
                                <input type='checkbox' data-md-icheck class='is-new-invoice' />
                            </div>
                        }
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.RoundOff</label>
                            @Html.TextBoxFor(model => model.RoundOff, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="uk-form-row add-new-item uk-hidden">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-2-8">
                            <div class="uk-autocomplete " id="item-autocomplete">
                                <div class="uk-input-group">
                                    <label>@Sales.ItemName <span>*</span></label>
                                    <input type="text" id="ItemName" class="md-input label-fixed" />
                                    <span class="uk-input-group-addon">
                                        <a data-uk-modal="{target:'#select-item',center:false}">
                                            <i class="uk-input-group-icon uk-icon-search"></i>
                                        </a>
                                    </span>
                                    <script type="text/autocomplete">
                                        <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                            {{~items}}
                                            <li data-value="{{ $item.Name }}"
                                                data-id="{{$item.ID}}"
                                                data-code="{{$item.Code}}"
                                                data-unit="{{$item.Unit}}"
                                                data-unit-id="{{$item.UnitID}}"
                                                data-sale-unit="{{$item.SalesUnit}}"
                                                data-sale-unit-id="{{$item.SalesUnitID}}"
                                                data-CGSTPercentage="{{$item.CGSTPercentage}}"
                                                data-IGSTPercentage="{{$item.IGSTPercentage}}"
                                                data-SGSTPercentage="{{$item.SGSTPercentage}}"
                                                data-loose-rate="{{$item.LooseRate}}"
                                                data-rate="{{$item.Rate}}"
                                                data-stock="{{$item.Stock}}">
                                                <a>
                                                    {{ $item.Name }}
                                                    <div>{{$item.Code}}</div>
                                                </a>
                                            </li>
                                            {{/items}}
                                        </ul>
                                    </script>
                                </div>
                            </div>
                            @Html.Hidden("ItemID")
                            @Html.Hidden("Code")
                            @Html.Hidden("PriceListID", 1)
                            @Html.Hidden("Stock")
                            @Html.Hidden("DiscountPercentage")
                            @Html.Hidden("CGSTPercentage")
                            @Html.Hidden("IGSTPercentage")
                            @Html.Hidden("SGSTPercentage")
                            @Html.Hidden("Rate")
                            @Html.Hidden("PrimaryUnit")
                            @Html.Hidden("PrimaryUnitID")
                            @Html.Hidden("SalesUnit")
                            @Html.Hidden("SalesUnitID")
                            @Html.Hidden("LooseRate")

                        </div>
                        <div class="uk-width-medium-1-10">
                            <label>@Sales.Unit </label>
                            @Html.DropDownListFor(Model => Model.UnitID, Model.UnitList, "Select", new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.Qty <span>*</span></label>
                            <input type="text" id="Qty" class="md-input mask-qty label-fixed" />
                        </div>
                        <div class="uk-width-medium-1-8 ">
                            <label>@Sales.OfferQty </label>
                            <input type="text" id="OfferQty" class="md-input mask-qty label-fixed" />
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.Batch <span>*</span></label>
                            <input type="text" id="Batch" class="md-input label-fixed" />
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.MRP <span>*</span></label>
                            <input type="text" id="MRP" class="md-input mask-qty label-fixed" />
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.Disc</label>
                            <input type="text" id="DiscountPercent" class="md-input mask-qty label-fixed" />
                        </div>

                        <div class="uk-width-medium-1-8">
                            <div class="md-input-wrapper md-input-filled">
                                <label>&nbsp;</label>
                                <button class="md-btn md-btn-primary md-btn-block md-btn-wave-light waves-effect waves-button waves-light" id="btnAddItem">@Common.Add</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @Html.Hidden("StoreID", 0)
            @Html.Hidden("CheckStock", false)
            @Html.HiddenFor(model => model.BatchTypeID)
            <div class="uk-width-medium-2-10">
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-1-1">
                            <label>@Sales.NetAmount</label>
                            @Html.TextBoxFor(model => model.NetAmount, new { @class = "md-input mask-sales-currency label-fixed x-large", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-1">
                            <label>@Masters.CurrencyCode</label>
                            @Html.TextBoxFor(model => model.CurrencyCode, new { @class = "md-input label-fixed", @tabindex = "-1", @Disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="section-group">
    <table id="sales-return-items-list" class="uk-table" cellspacing="0" style="width:100%;">
        <thead>
            <tr>

                <th class="width-10">@Common.SerialNo</th>
                <th class="width-20 uk-text-center"></th>
                <th class="width-40">@Sales.ItemCode</th>
                <th class="width-120">@Sales.ItemName</th>
                <th class="width-40">@Sales.Batch</th>
                <th class="width-40">@Sales.Unit</th>
                <th class="width-50">@Sales.MRP</th>
                <th class="width-40">@Sales.BasicPrice</th>
                <th class="width-50">@Sales.SaleQty</th>
                <th class="width-50 uk-hidden">@Sales.OfferQty</th>
                <th class="width-60">@Sales.ReturnQty</th>
                <th class="width-50 uk-hidden">@Sales.OfferReturnQty</th>
                <th class="width-50">@Sales.GrossAmt</th>
                <th class="width-40">@Sales.Disc</th>
                <th class="width-40">@Sales.DiscAmt</th>
                <th class="width-40">@Sales.VATPercentage</th>
                <th class="width-40">@Sales.VATAmount</th>
                <th class="width-60">@Sales.NetAmount</th>
                <th class="width-60">@Sales.LogicCode</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items != null)
            {
                foreach (var item in Model.Items.Select((value, i) => new { i = (i + 1), value }))
                {
                    var GST = item.value.CGST + item.value.SGST + item.value.IGST;
                    var SecondaryUnitSize = @item.value.SecondaryUnitSize > 0 ? @item.value.SecondaryUnitSize : 1;
                    var quantity = (@item.value.SalesInvoiceQty - @item.value.SalesOfferQty);
                    var secondaryQty = (@item.value.SalesInvoiceQty - @item.value.SalesOfferQty) / (SecondaryUnitSize);
                    var isnewinvoice = @item.value.SalesInvoiceTransID == 0 ? 1 : 0;
                    <tr class="included">
                        <td class="uk-text-center">
                            @item.i
                            <input type="hidden" class="ItemID included" value="@item.value.ItemID" readonly="readonly" />
                            <input type="hidden" class="UnitID included" value="@item.value.UnitID" readonly="readonly" />
                            <input type="hidden" class="BatchID included" value="@item.value.BatchID" readonly="readonly" />
                            <input type="hidden" class="BatchTypeID included" value="@item.value.BatchTypeID" readonly="readonly" />
                            <input type="hidden" class="md-input CGSTPercent included mask-currency" value="@item.value.CGSTPercentage" readonly="readonly" />
                            <input type="hidden" class="md-input IGSTPercent included mask-currency" value="@item.value.IGSTPercentage" readonly="readonly" />
                            <input type="hidden" class="md-input SGSTPercent included mask-currency" value="@item.value.SGSTPercentage" readonly="readonly" />
                            <input type="hidden" class="md-input InvoiceTransID included mask-currency" value="@item.value.SalesInvoiceTransID" readonly="readonly" />
                            <input type="hidden" class="md-input InvoiceTransNo included" value="@item.value.TransNo" readonly="readonly" />
                            <input type="hidden" class="CounterSalesTransID included" value="@item.value.SalesInvoiceTransID" />
                            <input type="hidden" class="UnitID included" value="@item.value.PrimaryUnitID" />
                            <input type="hidden" class="SalesUnitID included" value="@item.value.SalesUnitID" />
                            <input type="hidden" class="FullPrice included" value="@item.value.FullPrice" />
                            <input type="hidden" class="LoosePrice included" value="@item.value.LoosePrice" />
                            <input type="hidden" class="CounterSalesTransUnitID" value="@item.value.SalesTransUnitID" />
                            <input type="hidden" class="ConvertedQuantity" value="@item.value.ConvertedQuantity" />
                            <input type="hidden" class="ConvertedOfferQuantity" value="@item.value.ConvertedOfferQuantity" />
                            <input type="hidden" class="Quantity" value=@quantity />
                            <input type="hidden" class="OfferQuantity" value="@item.value.SalesOfferQty" />
                            <input type="hidden" class="LogicCodeID included" value="@item.value.LogicCodeID" />
                            <input type="hidden" class="CGST included mask-sales-currency" value="@item.value.CGST" />
                            <input type="hidden" class="SGST included mask-sales-currency" value="@item.value.SGST" />
                            <input type="hidden" class="IGST  included mask-sales-currency" value="@item.value.IGST" />
                            <input type="hidden" class="IsNewInvoice  included " value=@isnewinvoice />
                            <input type="hidden" class="SecondaryUnitSize" value="@item.value.SecondaryUnitSize" />
                        </td>
                        <td class='checked uk-text-center' data-md-icheck>
                            <input type='checkbox' class='include-item' checked />
                        </td>
                        <td class="">@item.value.ItemCode</td>


                        <td class="">@item.value.ItemName</td>
                        <td class="">@item.value.Batch</td>
                        <td class="uk-hidden">
                            @if (item.value.SalesInvoiceTransID == 0)
                            {
                                @Html.DropDownListFor(Model => item.value.UnitID, new SelectList(item.value.UOMList, "Value", "Text", item.value.UnitID), new { @class = "md-input label-fixed Unit included", @disabled = "disabled" })

                            }
                            else
                            {
                                @Html.DropDownListFor(Model => item.value.UnitID, new SelectList(item.value.UOMList, "Value", "Text", item.value.UnitID), new { @class = "md-input label-fixed Unit included" })

                            }
                        </td>
                        <td class="SecondaryUnit">@item.value.SecondaryUnit</td>
                        <td class="uk-hidden"><input type="text" class="md-input MRP included mask-sales-currency" value="@item.value.MRP" readonly="readonly" /></td>
                        <td><input type="text" class="md-input SecondaryMRP included mask-sales-currency" value="@item.value.SecondaryMRP" readonly="readonly" /></td>
                        <td><input type="text" class="md-input BasicPrice included mask-sales-currency " value="@item.value.BasicPrice" readonly="readonly" /></td>

                        <td class="uk-hidden"><input type="text" class="md-input SaleQty included mask-numeric" value=@quantity readonly="readonly" /></td>
                        <td><input type="text" class="md-input SaleSecondaryQty included mask-numeric" value=@secondaryQty readonly="readonly" /></td>
                        <td class="uk-hidden"><input type="text" class="md-input OfferQty included mask-numeric" value="@item.value.OfferQty" readonly="readonly" /></td>

                        <td class="uk-hidden"><input type="text" class="md-input ReturnQty included mask-numeric" value="@item.value.Qty" /></td>
                        <td><input type="text" class="md-input SecondaryReturnQty included mask-numeric" value="@item.value.SecondaryQty" /></td>
                        <td class="uk-hidden"><input type="text" class="md-input OfferReturnQty  included mask-numeric" value="@item.value.OfferReturnQty" /></td>
                        <td><input type="text" class="md-input GrossAmount included mask-currency" value="@item.value.GrossAmount" readonly="readonly" /></td>


                        <td><input type="text" class="md-input DiscountPercentage included mask-currency" value="@item.value.DiscountPercentage" readonly="readonly" /></td>

                        <td><input type="text" class="md-input DiscountAmount included mask-currency" value="@item.value.DiscountAmount" readonly="readonly" /></td>

                        @*<td><input type="text" class="md-input GST included mask-currency" value="@GST" readonly="readonly" /></td>*@
                        <td><input type="text" class="md-input VATPercentage included  mask-currency" value="@item.value.VATPercentage" readonly="readonly" /></td>
                        <td><input type="text" class="md-input VATAmount included  mask-currency" value="@item.value.VATAmount" readonly="readonly" /></td>
                        <td><input type="text" class="md-input NetAmount included  mask-currency" value="@item.value.NetAmount" readonly="readonly" /></td>
                        <td>
                            @Html.DropDownListFor(Model => item.value.LogicCodeID, new SelectList(Model.SalesReturnLogicCode, "Value", "Text", item.value.LogicCodeID), "Select", new { @class = "md-input label-fixed LogicCodeID" })
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <input type="hidden" id="item-count" value="@Model.Items.Count()" />
</div>

@Html.Partial("~/Areas/Masters/Views/Customer/PartialList.cshtml")
@Html.Partial("~/Areas/Sales/Views/SalesReturn/AddSalesInvoice.cshtml", Model.ReturnInvoiceList)
@Html.Partial("~/Areas/Masters/Views/Item/PartialList.cshtml")