@model TradeSuiteApp.Web.Areas.Sales.Models.SalesOrderModel
@{
    ViewBag.Title = "Form";
}
<div class="section-group">
    <div class="uk-form-row">
        <div class="uk-grid" data-uk-grid-margin="">
            <div class="uk-width-medium-8-10">
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.OrderNo</label>
                            @Html.TextBoxFor(model => model.SONo, new { @class = "md-input label-fixed", @readonly = "readonly" })
                        </div>
                        @Html.HiddenFor(model => model.ID)
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.OrderDate</label>
                            @Html.TextBoxFor(model => model.SODate, new { @class = "md-input label-fixed", @readonly = "readonly" })
                        </div>
                        @if (Model.ID > 0 || Model.CustomerID > 0)
                        {
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.CustomerCategory</label>
                            @Html.TextBoxFor(model => model.CustomerCategory, new { @class = "md-input label-fixed", @readonly = "readonly" })
                        </div>
                        }
                        else
                        {
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.CustomerCategory</label>
                            @Html.DropDownListFor(model => model.CustomerCategoryID, Model.CustomerCategoryList, "Select", new { @class = "md-input label-fixed" })
                        </div>
                        }

                        @if (Model.ID > 0 || Model.CustomerID>0)
                        {
                        <div class="uk-width-medium-2-8">
                            <label>@Sales.CustomerName<span>*</span></label>
                            @Html.TextBoxFor(model => model.CustomerName, new { @class = "md-input label-fixed", @readonly = "readonly" })
                        </div>
                        }
                        else
                        {
                        <div class="uk-width-medium-2-8">
                            <div class="uk-autocomplete " id="customer-autocomplete">
                                <div class="uk-input-group">
                                    <label for="uk_dp_start">@Sales.CustomerName<span>*</span></label>
                                    @Html.TextBox("CustomerName", Model.CustomerName, new { @class = "md-input label-fixed" })
                                    <span class="uk-input-group-addon">
                                        <a data-uk-modal="{target:'#select-customer',center:false}">
                                            <i class="uk-input-group-icon uk-icon-search"></i>
                                        </a>
                                    </span>
                                    <script type="text/autocomplete">
                                        <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                            {{~items}}
                                            <li data-value="{{ $item.Name }}"
                                                data-id="{{$item.ID}}"
                                                data-CustomerCategory="{{$item.CustomerCategory}}"
                                                data-CustomerCategoryID="{{$item.CustomerCategoryID}}"
                                                data-code="{{$item.Code}}"
                                                data-location="{{$item.Location}}"
                                                data-state-id="{{$item.StateID}}"
                                                data-price-list-id="{{$item.PriceListID}}"
                                                data-is-gst-registered="{{$item.IsGSTRegistered}}">
                                                <a>
                                                    {{ $item.Name }} ({{{ $item.Code }}})
                                                    <div>{{{ $item.Location }}}</div>
                                                </a>
                                            </li>
                                            {{/items}}
                                        </ul>
                                    </script>
                                </div>
                            </div>
                        </div>
                        }
                        @Html.HiddenFor(model => model.CustomerID)
                        @Html.HiddenFor(model => model.StateID)
                        @Html.HiddenFor(model => model.PriceListID)
                        @Html.HiddenFor(model => model.IsGSTRegistered)
                        @Html.HiddenFor(model => model.SchemeID)
                        @Html.HiddenFor(model => model.LocationStateID)
                        @Html.HiddenFor(model => model.BatchTypeID)
                        @Html.Hidden("StoreID", 0)
                        @Html.Hidden("CheckStock", false)
                        @Html.Hidden("IsApproved", 1)
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.BillTo</label>
                            @Html.DropDownListFor(model => model.BillingAddressID, Model.BillingAddressList, new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label for="uk_dp_start">@Sales.ShippTo</label>
                            @Html.DropDownListFor(model => model.ShippingAddressID, Model.ShippingAddressList, new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.PaymentMode</label>
                            @Html.DropDownListFor(model => model.PaymentModeID, Model.PaymentModeList, "Select", new { @class = "md-input label-fixed" })
                        </div>
                    </div>
                </div>
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.GrossAmt</label>
                            @Html.TextBoxFor(model => model.GrossAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.DiscAmt</label>
                            @Html.TextBoxFor(model => model.DiscountAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.TaxableAmount</label>
                            @Html.TextBoxFor(model => model.TaxableAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.SGST</label>
                            @Html.TextBoxFor(model => model.SGSTAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.CGST</label>
                            @Html.TextBoxFor(model => model.CGSTAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.IGST</label>
                            @Html.TextBoxFor(model => model.IGSTAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8 cess-enabled">
                            <label>@Sales.CessAmount</label>
                            @Html.TextBoxFor(model => model.CessAmount, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                        <div class="uk-width-medium-1-8">
                            <label>@Sales.RoundOff</label>
                            @Html.TextBoxFor(model => model.RoundOff, new { @class = "md-input mask-sales-currency label-fixed", @tabindex = "-1", @readonly = "readonly" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="uk-width-medium-2-10">
                <div class="uk-form-row">
                    <div class="uk-grid" data-uk-grid-margin="">
                        <div class="uk-width-medium-1-1">
                            <label>@Sales.NetAmount</label>
                            @Html.TextBoxFor(model => model.NetAmount, new { @class = "md-input mask-sales-currency label-fixed x-large", @tabindex = "-1", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (Model.PurchaseOrderID == 0)
    {
    <div class="uk-form-row">
        <div class="uk-grid" data-uk-grid-margin>

            <div class="uk-width-medium-1-10">
                <label for="uk_dp_start">@Sales.ItemCategory</label>
                @Html.DropDownListFor(model => model.ItemCategoryID, Model.ItemCategoryList, "Select", new { @class = "md-input label-fixed" })
            </div>

            <div class="uk-width-medium-2-10">
                <div class="uk-autocomplete " id="item-autocomplete">
                    <label>@Purchase.Item <span>*</span></label>
                    <input type="text" id="ItemName" class="md-input label-fixed" />
                    <span class="uk-input-group-addon">
                        <a data-uk-modal="{target:'#select-item',center:false}">
                            <i class="uk-input-group-icon uk-icon-search"></i>
                        </a>
                    </span>
                    <script type="text/autocomplete">
                        <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                            {{~items}}
                            <li data-value="{{ $item.Name }}"
                                data-id="{{$item.ID}}"
                                data-code="{{$item.Code}}"
                                data-unit="{{$item.SalesUnit}}"
                                data-unitid="{{$item.SalesUnitID}}"
                                data-item-category="{{$item.ItemCategoryID}}"
                                data-mrp="{{$item.MRP}}"
                                data-gst-percentage="{{$item.GSTPercentage}}"
                                data-cess-percentage="{{$item.CessPercentage}}">
                                <a>
                                    {{ $item.Name }}
                                    <div>{{$item.Code}}</div>
                                </a>
                            </li>
                            {{/items}}
                        </ul>
                    </script>
                </div>
                @Html.Hidden("ItemID")
                @Html.Hidden("Code")
                @Html.Hidden("GSTPercentage")
                @Html.Hidden("CessPercentage")
                @Html.Hidden("DiscountPercentage")
                @Html.Hidden("CategoryID")
                @Html.Hidden("UnitID")
            </div>
            <div class="uk-width-medium-1-10">
                <label>@Sales.Unit </label>
                @Html.TextBoxFor(model => model.Unit, new { @class = "md-input" })
            </div>
            <div class="uk-width-medium-2-10 doctor">
                <label for="uk_dp_start">@Sales.DrName</label>
                @if (Model.IsDraft)
                {
                @Html.TextBoxFor(model => model.DoctorName, new { @class = "md-input label-fixed ", @disabled = "disabled" })
                }
                else
                {
                <div class="uk-autocomplete " id="doctor-autocomplete">
                    <div class="uk-input-group">
                        @Html.TextBoxFor(model => model.DoctorName, new { @class = "md-input label-fixed" })
                        <span class="uk-input-group-addon">
                            <a data-uk-modal="{target:'#select-doctor',center:false}">
                                <i class="uk-input-group-icon uk-icon-search"></i>
                            </a>
                        </span>
                        <script type="text/autocomplete">
                            <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                {{~items}}
                                <li data-value="{{ $item.Name }}"
                                    data-id="{{$item.ID}}">
                                    <a>
                                        {{ $item.Name }}
                                    </a>
                                </li>
                                {{/items}}
                            </ul>
                        </script>
                    </div>
                </div>
                @Html.HiddenFor(model => model.DoctorID)
                }
            </div>

            <div class="uk-width-medium-1-10">
                <label>@Sales.Qty <span>*</span></label>
                <input type="text" id="Qty" class="md-input mask-qty label-fixed" />
            </div>
            <div class="uk-width-medium-1-10">
                <label>@Sales.Rate </label>
                @Html.TextBoxFor(model => model.Rate, new { @class = "md-input mask-sales-currency" })
            </div>
            <div class="uk-width-medium-1-10">
                <label>@Sales.Remarks </label>
                <input type="text" id="Remarks" class="md-input  label-fixed" />
            </div>
            <div class="uk-width-medium-1-10">
                <div class="md-input-wrapper md-input-filled">
                    <label>&nbsp;</label>
                    <button class="md-btn md-btn-primary md-btn-block md-btn-wave-light waves-effect waves-button waves-light" id="btnAddItem">@Common.Add</button>
                </div>
            </div>
        </div>
    </div>
    }
</div>
<div class="section-group">
    <div class="uk-grid">
        <div class="uk-width-1-1">
            <ul class="uk-tab" data-uk-tab="{connect:'#tabs-invoice-content',animation:'slide-horizontal'}" id="tabs-order">
                <li class="uk-active" id="item-tab"><a>@Sales.ItemDetails</a></li>
                <li id="amount-tab"><a>@Sales.TaxDetails</a></li>
            </ul>
            <ul id="tabs-invoice-content" class="uk-switcher uk-margin">
                <li>
                    <table id="sales-order-items-list" class="uk-table" cellspacing="0" style="width:100%;">
                        <thead>
                            <tr>
                                <th class="width-10">@Common.SerialNo</th>
                                <th class="width-80">@Sales.ItemCode</th>
                                <th class="width-250">@Sales.ItemName</th>
                                <th class="width-20">@Sales.Unit</th>
                                <th class="width-250">@Sales.Doctor</th>
                                <th class="width-40">@Sales.MRP</th>
                                <th class="width-60">@Sales.BasicPrice</th>
                                <th class="width-60">@Sales.Qty</th>
                                <th class="width-80">@Sales.GrossAmt</th>
                                <th class="width-40">@Sales.Disc</th>
                                <th class="width-60">@Sales.DiscAmt</th>
                                <th class="width-80">@Sales.TaxableAmount</th>
                                <th class="width-20">@Sales.GST</th>
                                <th class="width-40">@Sales.GSTAmount</th>
                                <th class="width-20 cess-enabled">@Sales.Cess</th>
                                <th class="width-40 cess-enabled">@Sales.CessAmount</th>
                                <th class="width-100">@Sales.NetAmount</th>
                                <th class="width-10">@Sales.Remarks</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Items != null)
                            {
                            foreach (var item in Model.Items.Select((value, i) => new { i = (i + 1), value }))
                            {
                            <tr>
                                <td class="uk-text-center">@item.i</td>
                                <td class="">
                                    @item.value.ItemCode
                                    <input type="hidden" class="ItemID" value="@item.value.ItemID" />
                                    <input type="hidden" class="SalesOrderItemID" value="@item.value.SalesOrderItemID" />
                                    <input type="hidden" class="UnitID" value="@item.value.UnitID" />
                                    <input type="hidden" class="DoctorID" value="@item.value.DoctorID" />
                                    <input type="hidden" class="IGSTPercentage" value="@item.value.IGSTPercentage" />
                                    <input type="hidden" class="SGSTPercentage" value="@item.value.SGSTPercentage" />
                                    <input type="hidden" class="CGSTPercentage" value="@item.value.CGSTPercentage" />
                                    <input type="hidden" class="CessPercentage" value="@item.value.CessPercentage" />
                                    <input type="hidden" class="IGST" value="@item.value.IGST" />
                                    <input type="hidden" class="SGST" value="@item.value.SGST" />
                                    <input type="hidden" class="CGST" value="@item.value.CGST" />
                                    <input type="hidden" class="BillableID" value="@item.value.BillableID" />
                                </td>
                                <td>@item.value.ItemName</td>
                                <td> @item.value.UnitName  </td>
                                <td> @item.value.DoctorName  </td>
                                <td class="mrp_hidden"><input type="text" class="mask-sales-currency MRP " value="@item.value.MRP" readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency BasicPrice" value="@item.value.BasicPrice" readonly="readonly" /></td>
                                <td><input type="text" class="md-input mask-sales-currency Qty" value="@item.value.Qty" /></td>
                                <td><input type="text" class="mask-sales-currency GrossAmount" value='@item.value.GrossAmount.ToString("0.00")' readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency DiscountPercentage" value="@item.value.DiscountPercentage" readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency DiscountAmount" value="@item.value.DiscountAmount" readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency TaxableAmount" value='@item.value.TaxableAmount' readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency GSTPercentage" value="@item.value.GSTPercentage" readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency GSTAmount" value="@item.value.GSTAmount" readonly="readonly" /></td>
                                <td class="cess-enabled"><input type="text" class="mask-sales-currency CessPercentage" value="@item.value.CessPercentage" readonly="readonly" /></td>
                                <td class="cess-enabled"><input type="text" class="mask-sales-currency CessAmount" value="@item.value.CessAmount" readonly="readonly" /></td>
                                <td><input type="text" class="mask-sales-currency NetAmount" value="@item.value.NetAmount" readonly="readonly" /></td>
                                <td><input type="text" class="md-input label-fixed Remarks" value="@item.value.Remarks" /></td>
                                <td class="uk-text-center">
                                    <a class="remove-item">
                                        <i class="uk-icon-remove"></i>
                                    </a>
                                </td>
                            </tr>
                            }
                            }
                        </tbody>
                    </table>
                    <input type="hidden" value="@Model.Items.Count()" id="item-count">
                </li>
                <li>
                    <table id="sales-invoice-amount-details-list" class="uk-table" cellspacing="0">
                        <thead>
                            <tr>
                                <th class="width-10">@Common.SerialNo</th>
                                <th class="width-10">@Sales.Particulars</th>
                                <th class="width-250">@Sales.TaxableAmount</th>
                                <th class="width-250">@Sales.Percentage</th>
                                <th class="width-60">@Sales.Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*  @if (Model.AmountDetails != null)
                            {
                            foreach (var item in Model.AmountDetails.Select((value, i) => new { i = (i + 1), value }))
                            {
                            <tr>
                                <td class="uk-text-center">
                                    @item.i
                                </td>
                                <td class='Particulars'>
                                    @item.value.Particulars
                                </td>
                                <td class='Particulars'>
                                    @item.value.TaxableAmount
                                </td>
                                <td class="uk-text-right">
                                    <input type='text' class='md-input mask-sales-currency Amnt-Percentage' readonly value="@item.value.Percentage.ToString(" 0.00")" />
                                </td>
                                <td class="uk-text-right">
                                    <input type='text' class='md-input mask-sales-currency Amount' readonly value="@item.value.Amount.ToString(" 0.00")" />
                                </td>
                            </tr>
                            }
                            }*@
                        </tbody>
                    </table>
                </li>
            </ul>
        </div>
    </div>

</div>
@Html.Partial("~/Areas/Masters/Views/Customer/PartialList.cshtml")
@Html.Partial("~/Areas/Masters/Views/Item/SaleableServiceItemsList.cshtml")
@Html.Partial("~/Areas/Masters/Views/Doctor/DoctorPartialList.cshtml")
