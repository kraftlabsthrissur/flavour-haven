@model TradeSuiteApp.Web.Areas.Stock.Models.StockIssueViewModel

@{
    ViewBag.Title = @Stock.StockIssueDetails;
}
<div id="page_content">
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <div class="heading_title">
            <h1>@Stock.StockIssue</h1>
            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.IssueLocationID)
            <span class="uk-text-upper uk-text-small">@Stock.StockIssueDetails</span>
        </div>
        <div class="heading_actions">
            @if (Model.IsDraft && !Model.IsCancelled)
            {
            @ActionAuthorization.IsAuthorized("Edit", Html.ActionLink(Common.Edit, "Edit", "StockIssue", new { Area = "Stock", id = (Model != null) ? Model.ID : 0 }, new { @class = "md-btn edit" }))
            @ActionAuthorization.IsAuthorized("Cancel", "<a class='md-btn cancel'>" + @Common.Cancel + "</a>")

            }
            @ActionAuthorization.IsAuthorized("Print", " <a class='md-btn print'>Print</a>")
            @ActionAuthorization.IsAuthorized("StockIssuePrintPdf", " <a class='md-btn printpdf'>Print As PDF</a>")
            @Html.ActionLink(Common.Back, "Index", "StockIssue", new { Area = "Stock" }, new { @class = "md-btn " })
            @*<form action="/Reports/Stock/PickList/@Model.ID" method="POST">
                    <button type="submit" class="md-btn " value="@Common.Print" >@Common.Print</button>
                </form>*@
            <div data-uk-dropdown>
                <i class="md-icon material-icons">&#xE5D4;</i>
                <div class="uk-dropdown uk-dropdown-small">
                    <ul class="uk-nav">
                        <li><a>@Common.Print</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div id="page_content_inner" class="details-view">
        <div class="md-card uk-margin-medium-bottom">
            <div class="md-card-content">
                <div class="uk-grid" data-uk-grid-margin>
                    <div class="uk-width-medium-8-10">
                        <div class="uk-form-row">
                            <div class="uk-grid" data-uk-grid-margin>
                                <div class="uk-width-medium-1-8">
                                    <label>@Stock.IssueNo</label>
                                    @Html.TextBoxFor(m => m.IssueNo, new { @class = "md-input", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8">
                                    <label for="uk_dp_start">@Stock.IssueDate</label>
                                    @Html.TextBoxFor(m => m.Date, new { @class = "md-input", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8">
                                    <label>@Stock.IssueLocation</label>
                                    @Html.TextBoxFor(model => model.IssueLocationName, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.LocationStateID)
                                    <select id="ReceiptLocationID" class="uk-hidden" @((Model.ID > 0) ? "disabled =disabled" : "")>
                                        <option>Select</option>
                                        @foreach (var location in Model.ReceiptLocationList)
                                        {
                                            <option data-state-id="@location.StateID" value="@location.ID" @((Model.ReceiptLocationID == location.ID) ? "selected ='selected'" : "")>@location.Name</option>
                                        }
                                    </select>
                                </div>

                                <div class="uk-width-medium-1-8">
                                    <label>@Stock.IssuePremise</label>
                                    @Html.TextBoxFor(model => model.IssuePremiseName, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8">
                                    <label>@Stock.ReceiptLocation</label>
                                    @Html.TextBoxFor(model => model.ReceiptLocationName, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8">
                                    <label>@Stock.ReceiptPremise</label>
                                    @Html.TextBoxFor(model => model.ReceiptPremiseName, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-2-8">
                                    <label>@Stock.RequestNo</label>
                                    @Html.TextBoxFor(model => model.RequestNo, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                        <div class="uk-form-row">
                            <div class="uk-grid" data-uk-grid-margin>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.GrossAmount</label>
                                    @Html.TextBoxFor(m => m.GrossAmount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.TradeDiscount</label>
                                    @Html.TextBoxFor(m => m.TradeDiscount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.TaxableAmount</label>
                                    @Html.TextBoxFor(m => m.TaxableAmount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.SGSTAmount</label>
                                    @Html.TextBoxFor(m => m.SGSTAmount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.CGSTAmount</label>
                                    @Html.TextBoxFor(m => m.CGSTAmount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.IGSTAmount</label>
                                    @Html.TextBoxFor(m => m.IGSTAmount, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.RoundOff</label>
                                    @Html.TextBoxFor(m => m.RoundOff, new { @class = "md-input mask-currency", @disabled = "disabled" })
                                </div>
                                <div class="uk-width-medium-1-8 inter-branch">
                                    <label>@Stock.Remarks</label>
                                    @Html.TextBoxFor(m => m.Remark, new { @class = "md-input", @disabled = "disabled" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="uk-width-medium-2-10 inter-branch">
                        <label>@Stock.NetAmount</label>
                        @Html.TextBoxFor(m => m.NetAmount, new { @class = "md-input mask-sales-currency label-fixed x-large", @disabled = "disabled" })
                    </div>
                </div>
                <br />
                <div class="section-group">
                    <div class="uk-grid">
                        <div class="uk-width-1-1">
                            <ul class="uk-tab" data-uk-tab="{connect:'#tabs-issue-content',animation:'slide-horizontal'}" id="tabs-issue">
                                <li class="uk-active" id="item-tab"><a>@Sales.ItemDetails</a></li>

                                <li id="packing-tab"><a>@Sales.PackingDetails</a></li>
                            </ul>
                            <ul id="tabs-issue-content" class="uk-switcher uk-margin">
                                <li>
                                    <table id="stock-issue-items-list" class="uk-table scroll-table-dynamic" cellspacing="0" width=100">
                                        <thead>
                                            <tr>
                                                <th class="width-20">@Common.SerialNo</th>
                                                <th class="width-250">@Stock.ItemName</th>
                                                <th class="width-40">@Stock.Unit</th>
                                                <th class="width-80">@Stock.Batch</th>
                                                <th class="width-40">@Stock.BatchType</th>
                                                <th class="width-60">@Stock.RequestQty</th>
                                                <th class="width-60">@Stock.IssueQty</th>
                                                <th data-inter-branch="true" class="width-50 inter-branch">@Stock.BasicPrice</th>
                                                <th data-inter-branch="true" class="width-80 inter-branch">@Stock.GrossAmount</th>
                                                <th data-inter-branch="true" class="width-40 inter-branch">@Stock.TradeDiscountPer</th>
                                                <th data-inter-branch="true" class="width-60 inter-branch">@Stock.TradeDiscount</th>
                                                <th data-inter-branch="true" class="width-80 inter-branch">@Stock.TaxableAmount</th>
                                                <th data-inter-branch="true" class="width-40 inter-branch">@Stock.GSTPercentage</th>
                                                <th data-inter-branch="true" class="width-60 inter-branch">@Stock.GSTAmount</th>
                                                <th data-inter-branch="true" class="width-80 inter-branch">@Stock.NetAmount</th>
                                                <th class="width-100">@Stock.Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Items.Select((value, i) => new { i = (i + 1), value }))
                                            {
                                                <tr>
                                                    <td class="uk-text-center">@(1 + @Model.Items.IndexOf(item.value))</td>
                                                    <td>@item.value.Name</td>
                                                    <td class="uk-hidden">@item.value.Unit</td>
                                                    <td>@item.value.SecondaryUnit</td>
                                                    <td> @item.value.BatchName</td>
                                                    <td> @item.value.BatchType</td>
                                                    <td class="mask-production-qty uk-hidden"> @item.value.RequestedQty</td>
                                                    <td class="mask-production-qty"> @item.value.SecondaryQty</td>
                                                    <td class="mask-production-qty uk-hidden"> @item.value.IssueQty</td>
                                                    <td class="mask-production-qty"> @item.value.SecondaryIssueQty</td>
                                                    <td class="inter-branch mask-currency">@item.value.BasicPrice</td>
                                                    <td class="inter-branch mask-currency">@item.value.GrossAmount</td>
                                                    <td class="inter-branch mask-currency">@item.value.TradeDiscountPercentage</td>
                                                    <td class="inter-branch mask-currency">@item.value.TradeDiscount</td>
                                                    <td class="inter-branch mask-currency">@item.value.TaxableAmount</td>
                                                    <td class="inter-branch mask-currency">@item.value.GSTPercentage</td>
                                                    <td class="inter-branch mask-currency">@item.value.GSTAmount</td>
                                                    <td class="inter-branch mask-currency">@item.value.NetAmount</td>
                                                    <td>@item.value.Remark</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </li>
                                <li>

                                    <table id="packing-detail-list" class="uk-table" width="50" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th class="width-10">@Common.SerialNo</th>
                                                <th class="width-100">@Sales.PackSize</th>
                                                <th class="width-100">@Sales.Unit</th>
                                                <th class="width-100">@Sales.Nos</th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in Model.PackingDetails.Select((value, i) => new { i = (i + 1), value }))
                                            {

                                                <tr>
                                                    <td class="uk-text-center">@item.i</td>
                                                    <td class="uk-text-center PackSize">
                                                        @item.value.PackSize
                                                        <input type="hidden" class="PackUnitID" value="@item.value.PackUnitID">
                                                    </td>
                                                    <td class="uk-text-center PackUnit">@item.value.PackUnit</td>
                                                    <td class="mask-numeric Quantity ">@item.value.Quantity</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@Scripts.Render("~/Js/Page/StockIssue")
@Scripts.Render("~/Js/SignalR")
<script src="/signalr/Hubs"></script>
<script type="text/javascript">
    stockissue.details();
    SignalRClient.init();
</script>
