@model BusinessObject.PurchaseOrderBO
@Html.HiddenFor(model => model.SupplierID)
@Html.HiddenFor(model => model.StateId)
@Html.HiddenFor(model => model.IsGSTRegistred)
@{
    ViewBag.Title = @Purchase.EditPurchaseOrder;
}
<div id="page_content">
    <div id="page_heading" data-uk-sticky="{ top: 54, media: 960 }">
        <div class="heading_title">
            <h1>@Purchase.PurchseOrdersForStockItems</h1>
            <span class="uk-text-upper uk-text-small">@Purchase.EditPurchaseOrder</span>
        </div>
        <div class="heading_actions">
            @ActionAuthorization.IsAuthorized("Save", "<a class='md-btn btnSaveAndMail'>" + Common.SaveAndMail + "</a>")
            @ActionAuthorization.IsAuthorized("Save", "<a class='md-btn btnSavePO'>" + Common.Save + "</a>")
            @ActionAuthorization.IsAuthorized("SaveAsDraft", "<a class='md-btn btnSaveASDraftPO'>" + Common.SaveAsDraft + "</a>")


            @if (Model.IsCancellable && !Model.Cancelled && !Model.IsClone)
            {
                @ActionAuthorization.IsAuthorized("Cancel", "<a class='md-btn cancel'>" + Common.Cancel + "</a>")

            }

            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.IsClone)
            @Html.HiddenFor(m => m.CashPaymentLimit)
            @Html.HiddenFor(m => m.IsVATExtra)
            @Html.ActionLink(Common.Close, "Index", "PurchaseOrder", new { Area = "Purchase" }, new { @class = "md-btn " })
            <div data-uk-dropdown>
                <i class="md-icon material-icons">&#xE5D4;</i>
                <div class="uk-dropdown uk-dropdown-small">
                    <ul class="uk-nav">
                        <li><a>Print</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div id="page_content_inner" class="form-view">
        <div class="md-card uk-margin-medium-bottom">
            <div class="md-card-content">
                <div class="section-group">
                    <div class="uk-form-row">
                        <div class="uk-grid" data-uk-grid-margin="">
                            <div class="uk-width-medium-8-10">
                                <div class="md-card-content">
                                    <ul class="uk-tab" data-uk-tab="{connect:'#tabs-purchase-order-create-content',animation:'slide-horizontal'}" id="tabs-purchase-order-create">
                                        <li class="uk-active" data-tab="main"><a>Main Fields</a></li>
                                        <li class="" data-tab="optional"><a>Optional Fields</a></li>
                                    </ul>
                                    <ul id="tabs-purchase-order-create-content" class="uk-switcher uk-margin">
                                        <li>
                                            <div class="uk-form-row">
                                                <div class="uk-grid" data-uk-grid-margin>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.PONumber</label>
                                                        @Html.TextBoxFor(model => model.PurchaseOrderNo, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label for="uk_dp_start">@Purchase.PODate</label>
                                                        @Html.TextBoxFor(model => model.PurchaseOrderDate, "{0:dd-MMM-yyyy}", new { @class = "md-input", @disabled = "disabled" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8 ">
                                                        <label>@Purchase.PaymentTerms<span>*</span></label>
                                                        @Html.DropDownList("PaymentModeID", new SelectList(Model.DDLPaymentMode, "Value", "Text"), new { @class = "md-input label-fixed" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.ShippingAddress</label>
                                                        <select id="ShippingToId" class="md-input">
                                                            @foreach (var item in Model.ShippingAddressList)
                                                            {
                                                                <option value="@item.AddressID"
                                                                        @(item.AddressID == (int)Model.ShippingAddressID ? "selected" : "")
                                                                        data-state-id="@item.StateID">
                                                                    @item.Place
                                                                </option>
                                                            }
                                                        </select>
                                                    </div>
                                                    @Html.Hidden("ShippingStateId")
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.BillingAddress</label>
                                                        <select id="DDLBillTo" class="md-input">
                                                            @foreach (var item in Model.BillingAddressList)
                                                            {
                                                                <option value="@item.AddressID"
                                                                        @(item.AddressID == (int)Model.BillingAddressID ? "selected" : "")
                                                                        data-state-id="@item.StateID">
                                                                    @item.Place
                                                                </option>
                                                            }
                                                        </select>
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SupplyWithinDays <span>*</span></label>
                                                        @Html.TextBoxFor(model => model.DeliveryWithin, new { @class = "md-input label-fixed mask-numeric", @maxlength = "3" })
                                                    </div>

                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.GrossAmount</label>
                                                        @Html.TextBoxFor(model => model.GrossAmount, new { @class = "md-input label-fixed " + Model.normalclass, @disabled = "disabled" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.TaxableAmount</label>
                                                        @Html.TextBoxFor(model => model.TaxableAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @disabled = "disabled" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="uk-form-row">
                                                <div class="uk-grid" data-uk-grid-margin="">

                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.Advance</label>
                                                        @Html.TextBoxFor(model => model.AdvanceAmount, new { @class = "md-input uk-text-right label-fixed" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Masters.DiscountPercentage</label>
                                                        @Html.TextBoxFor(model => model.DiscountPercentage, new { @class = "md-input label-fixed mask-sales2-currency", @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Masters.Discount</label>
                                                        @Html.TextBoxFor(model => model.Discount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.VATPercentage</label>
                                                        @Html.TextBoxFor(model => model.VATPercentage, new { @class = "md-input label-fixed mask-sales2-currency" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.VATAmount</label>
                                                        @Html.TextBoxFor(model => model.VATAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppDocAmount</label>
                                                        @Html.TextBoxFor(model => model.SuppDocAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppShipAmount</label>
                                                        @Html.TextBoxFor(model => model.SuppShipAmount, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SupplierOtherCharges</label>
                                                        @Html.TextBoxFor(model => model.SuppOtherCharge, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                                                    </div>
                                                </div>
                                            </div>
                                        </li>

                                        <li>
                                            <div class="uk-form-row">
                                                <div class="uk-grid" data-uk-grid-margin="">
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.PaymentWithinDays</label>
                                                        @Html.DropDownListFor(model => model.PaymentWithinID, new SelectList(Model.PaymentDaysList, "Value", "Text"), "Select", new { @class = "md-input uk-text-right label-fixed", @id = "DDLPaymentWithin", @disabled = "disabled" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8 supplierLocation">
                                                        <label>@Purchase.SupplierLocation</label>
                                                        @Html.TextBoxFor(model => model.SupplierLocation, "", new { @class = "md-input label-fixed", @disabled = "disabled" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8 uk-hidden intercompanySupplierlocation">
                                                        <label>@Purchase.SupplierLocation</label>
                                                        @Html.DropDownListFor(Model => Model.SalesOrderLocationID, new SelectList(Model.DDLLocation, "Value", "Text"), "Select", new { @class = "md-input label-fixed", @id = "LocationID" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Masters.CurrencyName</label>
                                                        @Html.TextBoxFor(model => model.CurrencyName, new { @class = "md-input label-fixed", @tabindex = "-1", @disabled = "disabled" })
                                                    </div>

                                                    <div class="uk-width-medium-1-10">
                                                        <label>@Purchase.PurchaseCategory</label>
                                                        @Html.DropDownList("DDLPurchaseCategory", new SelectList(Model.DDLPurchaseCategory, "Value", "Text"), "Select", new { @class = "md-input label-fixed" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Masters.ExchangeRate</label>
                                                        @Html.TextBoxFor(model => model.CurrencyExchangeRate, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @disabled = "disabled" })
                                                    </div>

                                                    <div class="uk-width-medium-1-10">
                                                        <label>@Purchase.ItemCategory</label>
                                                        @Html.DropDownListFor(model => model.ItemCategoryID, new SelectList(Model.DDLItemCategory, "Value", "Text"), new { @class = "md-input label-fixed", @id = "DDLItemCategory" })
                                                    </div>

                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.Remarks</label>
                                                        @Html.TextBoxFor(model => model.Remarks, new { @class = "md-input label-fixed", @tabindex = "-1" })
                                                    </div>

                                                </div>
                                            </div>

                                            <div class="uk-form-row">
                                                <div class="uk-grid" data-uk-grid-margin="">
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppQuotNo</label>
                                                        @Html.TextBoxFor(model => model.SuppQuotNo, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppDocCode</label>
                                                        @Html.TextBoxFor(model => model.SuppDocCode, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppShipCode</label>
                                                        @Html.TextBoxFor(model => model.SuppShipCode, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.SuppOtherRemark </label>
                                                        @Html.TextBoxFor(model => model.SuppOtherRemark, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                    </div>

                                                    @*<div class="uk-width-medium-1-8">
                                                            <label>@Purchase.OrderType</label>
                                                            @Html.TextBoxFor(model => model.OrderType, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                        </div>*@
                                                    <div class="uk-width-medium-1-8 ">
                                                        <label>@Purchase.OrderType</label>
                                                        @Html.DropDownList("OrderType", new SelectList(Model.OrderTypeList, "Value", "Text"), "Select", new { @class = "md-input label-fixed" })
                                                    </div>
                                                    <div class="uk-width-medium-1-8">
                                                        <label>@Purchase.Shipment</label>
                                                        @Html.TextBoxFor(model => model.Shipment, new { @class = "md-input label-fixed ", @tabindex = "-1" })
                                                    </div>

                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>





                            </div>
                            <div class="uk-width-medium-2-10">
                                @if (Model.IsClone)
                                {<div class="uk-form-row">
                                        <div class="uk-width-medium-1-1">
                                            <div class="md-input-wrapper md-input-filled">
                                                <label>@Purchase.SelectedQuotation</label>
                                                <div class="uk-form-file v1">
                                                    <label id="selected-quotation">
                                                    </label>
                                                    <label for="select-quotation" class="upload-btn md-btn md-btn-flat md-btn-wave waves-effect waves-button text-capitalize">
                                                        <i class="uk-icon-upload"></i>
                                                    </label>
                                                    <input id="select-quotation" type="file" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="uk-form-row">
                                        <div class="uk-width-medium-1-1">
                                            <div class="md-input-wrapper md-input-filled">
                                                <label>@Purchase.OtherQuotation</label>
                                                <div class="uk-form-file v1">
                                                    <div id="other-quotation-list">
                                                        <div class="uk-button-dropdown" data-uk-dropdown>
                                                            <a><span id="file-count">0 Files</span> <i class="material-icons">&#xE313;</i></a>
                                                            <div class="uk-dropdown">
                                                                <ul class="uk-nav uk-nav-dropdown"></ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <label for="other-quotations" class="upload-btn md-btn md-btn-flat md-btn-wave waves-effect waves-button text-capitalize">
                                                        <i class="uk-icon-upload"></i>
                                                    </label>
                                                    <input id="other-quotations" type="file" multiple tabindex="-1">
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="uk-form-row">
                                        <div class="uk-width-medium-1-1">
                                            <label>@Purchase.NetAmount</label>
                                            @Html.TextBoxFor(model => model.NetAmt, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @id = "NetAmount", @disabled = "disabled" })
                                        </div>
                                    </div>

                                }
                                else
                                {

                                    <div class="uk-form-row">
                                        <div class="md-input-wrapper md-input-filled">
                                            <label>@Purchase.SelectedQuotation</label>
                                            <div class="uk-form-file v1">
                                                <label id="selected-quotation">
                                                    @foreach (var item in Model.SelectedQuotation)
                                                    {
                                                        <span>
                                                            <span class='view-file' data-id='@item.ID' data-url='@item.URL' data-path='@item.Path'>@item.Name</span>
                                                            <a class='remove-quotation'>X</a>
                                                        </span>
                                                    }
                                                </label>
                                                <label for="select-quotation" class="upload-btn md-btn md-btn-flat md-btn-wave waves-effect waves-button text-capitalize">
                                                    <i class="uk-icon-upload"></i>
                                                </label>
                                                <input id="select-quotation" type="file" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="uk-form-row">
                                        <div class="md-input-wrapper md-input-filled">
                                            <label>@Purchase.OtherQuotation</label>
                                            <div class="uk-form-file v1">
                                                <div id="other-quotation-list">
                                                    <div class="uk-button-dropdown" data-uk-dropdown>
                                                        <a><span id="file-count">@Model.OtherQuotations.Count() Files</span> <i class="material-icons">&#xE313;</i></a>
                                                        <div class="uk-dropdown">
                                                            <ul class="uk-nav uk-nav-dropdown">
                                                                @foreach (var item in Model.OtherQuotations)
                                                                {
                                                                    <li class='file-list'>
                                                                        <a class='remove-file'>X</a>
                                                                        <span data-id='@item.ID' class='view-file' data-url='@item.URL' data-path='@item.Path'>
                                                                            @item.Name
                                                                        </span>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <label for="other-quotations" class="upload-btn md-btn md-btn-flat md-btn-wave waves-effect waves-button text-capitalize">
                                                    <i class="uk-icon-upload"></i>
                                                </label>
                                                <input id="other-quotations" type="file" multiple tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="uk-form-row">
                                        <div class="uk-width-medium-1-1">
                                            <label>@Purchase.NetAmount</label>
                                            @Html.TextBoxFor(model => model.NetAmt, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1", @id = "NetAmount", @disabled = "disabled" })
                                        </div>
                                        <div class="uk-width-medium-1-1">
                                            <label>@Masters.CurrencyCode</label>
                                            @Html.TextBoxFor(model => model.CurrencyCode, new { @class = "md-input label-fixed", @tabindex = "-1", @Disabled = "disabled" })
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>

                    </div>

                </div>
                <div class="section-group">
                    <div class="uk-grid" data-uk-grid-margin="">
                        @if (Model.IsClone)
                        {
                            <div class="uk-width-medium-2-10">
                                <div class="uk-autocomplete " id="supplier-autocomplete">
                                    <div class="uk-input-group">
                                        <label>@Purchase.Supplier<span>*</span></label>
                                        @Html.TextBoxFor(m => m.SupplierName, new { @class = "md-input label-fixed" })
                                        <span class="uk-input-group-addon">
                                            <a data-uk-modal="{target:'#select-supplier',center:false }">
                                                <i class="uk-input-group-icon uk-icon-search"></i>
                                            </a>
                                        </span>
                                        <script type="text/autocomplete">
                                               <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                                   {{~items}}
                                                   <li data-value="{{ $item.Name }}"
                                                       data-id="{{$item.ID}}"
                                                       data-location="{{$item.Location}}"
                                                       data-state-id="{{$item.StateID}}"
                                                       data-Item-Category="{{$item.ItemCategory}}"
                                                       data-payment-days="{{$item.PaymentDays}}"
                                                       data-IsInterCompany="{{$item.IsInterCompany}}"
                                                       data-inter-company-locationID="{{$item.InterCompanyLocationID}}"
                                                       data-is-gst-registered="{{$item.IsGSTRegistered}}">
                                                       <a>
                                                           {{ $item.Name }} ({{ $item.Code }})
                                                           <div>{{{ $item.Location }}}</div>

                                                       </a>
                                                   </li>
                                                   {{/items}}
                                               </ul>
                                        </script>
                                    </div>
                                    @Html.HiddenFor(model => model.SupplierID, new { @class = "md-input label-fixed" })
                                    @Html.Hidden("StateId")
                                    @Html.Hidden("IsGSTRegistred")
                                    @Html.HiddenFor(Model => Model.Email)
                                    @Html.HiddenFor(Model => Model.IsInterCompany)
                                    @Html.HiddenFor(model => model.InterCompanyLocationID)
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="uk-width-medium-2-10">
                                <label>@Purchase.Supplier <span>*</span></label>
                                @Html.TextBoxFor(model => model.SupplierName, new { @class = "md-input label-fixed", @disabled = "disabled" })
                                @Html.HiddenFor(Model => Model.IsInterCompany)
                            </div>
                        }
                        @Html.HiddenFor(model => model.IsGST)
                        @Html.HiddenFor(model => model.IsVat)
                        @Html.HiddenFor(model => model.TaxTypeID)
                        @Html.HiddenFor(model => model.CurrencyID)
                        @Html.HiddenFor(model => model.DecimalPlaces)
                        @Html.HiddenFor(model => model.normalclass)
                        <div class="uk-width-medium-2-10">
                            <div class="uk-autocomplete " id="item-autocomplete">
                                <label>@Purchase.Item <span>*</span></label>
                                <input type="text" id="ItemName" class="md-input label-fixed" />
                                <span class="uk-input-group-addon">
                                    <a data-uk-modal="{target:'#select-item',center:false}">
                                        <i class="uk-input-group-icon uk-icon-search"></i>
                                    </a>
                                </span>
                                <script type="text/autocomplete">
                                <ul class="uk-nav uk-nav-autocomplete uk-autocomplete-results">
                                    {{~items}}
                                    <li data-value="{{ $item.Name }}"
                                        data-id="{{$item.ID}}"
                                        data-primary-unit="{{$item.Unit}}"
                                        data-primary-unit-id="{{$item.UnitID}}"
                                        data-purchase-unit="{{$item.PurchaseUnit}}"
                                        data-purchase-unit-id="{{$item.PurchaseUnitID}}"
                                        data-last-pr="{{$item.LastPR}}"
                                        data-lowest-pr="{{$item.LowestPR}}"
                                        data-pending-order-qty="{{$item.PendingOrderQty}}"
                                        data-qty-with-qc="{{$item.QtyUnderQC}}"
                                        data-qty-available="{{$item.QtyAvailable}}"
                                        data-Item-Category="{{$item.FGCategoryID}}"
                                        data-gst-percentage="{{$item.GSTPercentage}}">
                                        <a>
                                            {{ $item.Name }}
                                            <div>{{$item.Code}}({{$item.Unit}})</div>
                                        </a>
                                    </li>
                                    {{/items}}
                                </ul>
                                </script>
                            </div>
                            @Html.Hidden("ItemID")
                            @Html.Hidden("PrimaryUnit")
                            @Html.Hidden("PrimaryUnitID")
                            @Html.Hidden("PurchaseUnit")
                            @Html.Hidden("PurchaseUnitID")
                            @Html.Hidden("LastPr")
                            @Html.Hidden("LowestPr")
                            @Html.Hidden("PendingOrderQty")
                            @Html.Hidden("QtyWithQc")
                            @Html.Hidden("QtyAvailable")
                            @Html.Hidden("GSTPercentage")
                            @Html.Hidden("CategoryID")
                            @Html.Hidden("Code")
                            @Html.Hidden("PartsNumber")
                            @Html.Hidden("Remark")
                            @Html.Hidden("Model")
                            @Html.Hidden("HistoryItemID")
                            @Html.Hidden("SecondaryUnits")
                        </div>
                        <input type="hidden" value="stock" id="type" />
                        <div class="uk-width-medium-1-10">
                            <label>@Sales.Unit </label>
                            @Html.DropDownListFor(Model => Model.UnitID, Model.UnitList, "Select", new { @class = "md-input label-fixed" })
                        </div>
                        @*<div class="uk-width-medium-1-10 uk-hidden" id="select_batch_type">
                                <label>@Purchase.BatchType</label>
                                @Html.DropDownListFor(Model => Model.BatchTypeID, Model.BatchTypeList, "Select", new { @class = "md-input label-fixed", @id = "BatchType" })
                            </div>*@
                        <div class="uk-width-medium-1-10">
                            <label>@Purchase.Qty <span>*</span></label>
                            <input type="text" id="Qty" class="md-input mask-sales2-currency label-fixed" />
                        </div>

                        <div class="uk-width-medium-1-10 uk-hidden">
                            <label>@Purchase.Value</label>
                            <input type="text" id="txtValue" value="0" class="md-input mask-sales2-currency label-fixed" disabled tabindex="-1" />
                        </div>
                        <div class="uk-width-medium-1-10">
                            <label>@Purchase.Rate</label>
                            @Html.TextBoxFor(model => model.PurchaseRate, new { @class = "md-input label-fixed " + Model.normalclass, @tabindex = "-1" })
                        </div>
                        <div class="uk-width-medium-1-10">
                            <div class="md-input-wrapper md-input-filled">
                                <label>&nbsp;</label>
                                <button class="md-btn md-btn-primary md-btn-block md-btn-wave-light waves-effect waves-button waves-light" id="btnAddProduct">Add</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="section-group">
                    <div class="uk-form-row">
                        <table id="purchase-order-items-list" class="uk-table" cellspacing="0">
                            <thead>
                                <tr>
                                    <th class="width-10"></th>
                                    <th class="width-10">@Common.SerialNo</th>
                                    <th class="width-20">
                                        <div class="checkbox-container">
                                            <input type='checkbox' data-md-icheck class='select-all-item' checked />
                                        </div>
                                    </th>
                                    <th class="width-50">@Purchase.ItemCode</th>
                                    <th class="width-100">@Purchase.ItemName</th>
                                    <th class="uk-hidden">@Purchase.PartsNumber</th>
                                    <th class="width-50">@Purchase.Unit</th>
                                    <th class="width-30">@Purchase.Qty</th>
                                    <th class="width-50">@Purchase.Rate</th>
                                    <th class="width-50">@Purchase.GrossAmount</th>
                                    <th class="width-30">@Purchase.DiscountPer</th>
                                    <th class="width-50">@Purchase.Discount</th>
                                    <th class="width-30">@Purchase.LastPR</th>
                                    <th class="width-30">@Purchase.LowestPR</th>
                                    <th class="width-30">@Purchase.QuantityOrdered</th>
                                    <th class="width-30">@Purchase.QuantityAvailable</th>
                                    <th class="width-30">@Purchase.VATPercentage</th>
                                    <th class="width-30">@Purchase.VATAmount</th>
                                    <th class="width-50">@Purchase.TaxableAmount</th>
                                    <th class="width-50">@Purchase.NetAmount</th>
                                    <th class="width-80"></th>
                                </tr>
                            </thead>
                            <tbody class="poTbody">
                                @if (Model != null)
                                {
                                    if (Model.items != null)
                                    {
                                        foreach (var item in Model.items.Select((value, i) => new { i = (i + 1), value }))
                                        {
                                            var GstPercent = item.value.IGSTPercent == 0 ? item.value.CGSTPercent + item.value.SGSTPercent : item.value.IGSTPercent;
                                            var GstAmount = item.value.CGSTAmt + item.value.IGSTAmt + item.value.SGSTAmt;
                                            var Total = (GstAmount == null ? 0 : GstAmount) + ((item.value.Rate == null ? 0 : item.value.Rate) * (item.value.Quantity == null ? 0 : item.value.Quantity));
                                            var pr = item.value.PRTransID > 0 ? "rowPR" : "";

                                            <tr class="rowPO  PrRowClass @pr included">
                                                <td class="uk-text-center showitemhistory action"><a class="uk-text-center action"><i class="uk-icon-eye-slash"></i></a></td>
                                                <td class="uk-text-center clPr">
                                                    @item.i
                                                    <input type="hidden" class="ItemID" value="@item.value.ItemID" />
                                                    <input type="hidden" class="UnitID" value="@item.value.UnitID" />
                                                    @*<input type="hidden" class="PrId" value="@item.value.PurchaseRequisitionID" />*@
                                                    <input type="hidden" class="PrTransId" value="@item.value.PRTransID" />
                                                    <input type="hidden" class="ExchangeRate" value="@item.value.ExchangeRate" />
                                                    <input type="hidden" class="CurrencyID" value="@item.value.CurrencyID" />
                                                    <input type="hidden" class="IsVat" value="@item.value.IsVat" />
                                                    <input type="hidden" class="IsGST" value="@item.value.IsGST" />
                                                    <input type="hidden" class="Remark" value="@item.value.Remark" />
                                                    <input type="hidden" class="Model" value="@item.value.Model" />
                                                </td>
                                                <td class="uk-text-center checked chkValid" data-md-icheck><input type="checkbox" class="chkCheck" checked /></td>
                                                <td class="clCode">@item.value.ItemCode </td>
                                                <td class="clItem">@item.value.Name</td>
                                                <td class="clPartsNumber uk-hidden">@item.value.PartsNumber</td>
                                                <td class="clUnit uk-hidden">@item.value.Unit</td>
                                                <td class="secondary">
                                                    <select class="md-input label-fixed secondaryUnit">
                                                        @foreach (var option in item.value.SecondaryUnitList)
                                                        {
                                                            <option value="@option.PackSize" @(option.PackSize == item.value.SecondaryUnitSize ? "selected" : "")>@option.Name</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td class="clQty uk-hidden"><input type="text" class="md-input mask-sales2-currency clRqQty included" value="@item.value.Quantity" /></td>
                                                <td class="secondary"><input type="text" class="md-input mask-sales2-currency secondaryQty included" value="@item.value.SecondaryQty" /></td>
                                                <td class="uk-hidden"><input type="text" class="md-input Rate @Model.normalclass included" value="@item.value.Rate" /></td>
                                                <td class="secondary"><input type="text" class="md-input secondaryRate @Model.normalclass included" value="@item.value.SecondaryRate" /></td>
                                                <td><input type="text" class="md-input GrossAmount @Model.normalclass" value="@item.value.GrossAmount" disabled /></td>
                                                <td><input type="text" class="md-input DiscountPercentage mask-sales2-currency included" value="@item.value.DiscountPercent" /></td>
                                                <td><input type="text" class="md-input DiscountAmount @Model.normalclass included" value="@item.value.Discount" /></td>
                                                <td><input type="text" class="md-input clLastPr @Model.normalclass" value="@item.value.LastPurchaseRate" disabled /></td>
                                                <td><input type="text" class="md-input clLowestPr @Model.normalclass" value="@item.value.LowestPR" disabled /></td>
                                                <td><input type="text" class="md-input clPendingOrderQty @Model.normalclass" value="@item.value.PendingPOQty" disabled /></td>
                                                <td><input type="text" class="md-input clQtyAvailable @Model.normalclass" value="@item.value.QtyAvailable" disabled /></td>
                                                <td><input type="text" class="md-input VATPercentage mask-sales2-currency included" value="@item.value.VATPercentage" /></td>
                                                <td><input type="text" class="md-input VATAmount @Model.normalclass included" value="@item.value.VATAmount" /></td>
                                                <td><input type="text" class="md-input TaxableAmount @Model.normalclass" value="@item.value.TaxableAmount" disabled /></td>
                                                <td><input type="text" class="md-input NetAmount @Model.normalclass" value="@item.value.NetAmount" disabled /></td>
                                                <td>item exists</td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                        <input type="hidden" id="item-count" value="@Model.items.Count" />

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="uk-modal " id="select_pr" aria-hidden="true" style="display: none; overflow-y: scroll;">
    <div class="uk-modal-dialog" style="">
        <div class="uk-modal-header">
            <h3 class="uk-modal-title">Select Purchase Requisition <i class="material-icons" data-uk-tooltip="{pos:'top'}" title="headline tooltip"></i></h3>
        </div>
        <table id="purchase-requisition-list" class="uk-table" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th class="width-10">@Common.SerialNo</th>
                    <th class="width-10"></th>
                    <th class="width-50">@Purchase.PRNo</th>
                    <th class="width-40">@Purchase.PRDate</th>
                    <th class="width-100">@Purchase.ItemCategory</th>
                    <th class="width-120"> @Purchase.RequestedBy</th>

                </tr>
            </thead>
            <thead class="search">
                <tr>
                    <th class="width-10">@Common.SerialNo</th>
                    <th class="width-10"></th>
                    <th class="width-60">@Purchase.PRNo</th>
                    <th class="width-50">@Purchase.PRDate</th>
                    <th class="width-100">@Purchase.ItemCategory</th>
                    <th class="width-120"> @Purchase.RequestedBy</th>
                </tr>
            </thead>
            <tbody class="unPrTbody">
                @if (Model != null)
                {
                    if (Model.UnProcessedPrList != null)

                    {
                        foreach (var itm in Model.UnProcessedPrList.Select((value, i) => new { i = (i + 1), value }))
                        {
                            string expDate = (Convert.ToDateTime(itm.value.Date)).ToString("dd-MMM-yyyy");
                            <tr class="rowUnPr">
                                <td class="uk-text-center clId">@itm.i<input type="hidden" class="clprIdItem" value="@itm.value.ID" /></td>
                                <td class="uk-text-center checked clChk" data-md-icheck><input type="checkbox" class="clChkItem" /></td>
                                <td>@itm.value.Code</td>
                                <td>@expDate</td>
                                <td>@itm.value.ItemCategory</td>
                                <td>@itm.value.FromDepartment</td>
                            </tr>

                        }
                    }

                }

            </tbody>
        </table>
        <div class="uk-modal-footer uk-text-right">
            <button type="button" class="md-btn uk-modal-close">Close</button>
            <button type="button" class="md-btn md-btn-primary uk-modal-close" id="btnOkPrList">Ok</button>
        </div>
    </div>
</div>
@Html.Partial("~/Areas/Masters/Views/Supplier/PartialList.cshtml")
@Html.Partial("~/Areas/Masters/Views/Item/ItemList.cshtml")
@Html.Partial("~/Areas/Purchase/Views/PurchaseOrder/HistoryList.cshtml")

@Scripts.Render(System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl("~/Js/Page/Supplier"))
@Scripts.Render(System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl("~/Js/Page/Item"))
@Scripts.Render(("~/Js/Page/PurchaseOrder"))

<script type="text/javascript">
    purchase_order.init();
</script>